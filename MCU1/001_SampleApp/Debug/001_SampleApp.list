
001_SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001588  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  08001728  08001728  00002728  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001864  08001864  000030a4  2**0
                  CONTENTS
  4 .ARM          00000008  08001864  08001864  00002864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800186c  0800186c  000030a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800186c  0800186c  0000286c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001870  08001870  00002870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000a4  20000000  08001874  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200000a4  08001918  000030a4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08001918  00003210  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000030a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000acf  00000000  00000000  000030d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003f0  00000000  00000000  00003ba3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003f98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d8  00000000  00000000  000040d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be7  00000000  00000000  000041a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001361  00000000  00000000  00006d8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009816  00000000  00000000  000080f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011906  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e58  00000000  00000000  0001194c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006a  00000000  00000000  000127a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000a4 	.word	0x200000a4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001710 	.word	0x08001710

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000a8 	.word	0x200000a8
 80001dc:	08001710 	.word	0x08001710

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800028a:	2300      	movs	r3, #0
 800028c:	60fb      	str	r3, [r7, #12]
 800028e:	e015      	b.n	80002bc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000290:	f000 fa10 	bl	80006b4 <rand>
 8000294:	4602      	mov	r2, r0
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	009b      	lsls	r3, r3, #2
 800029a:	6879      	ldr	r1, [r7, #4]
 800029c:	4419      	add	r1, r3
 800029e:	4b0c      	ldr	r3, [pc, #48]	@ (80002d0 <array_fill_numbers+0x50>)
 80002a0:	fb83 0302 	smull	r0, r3, r3, r2
 80002a4:	1198      	asrs	r0, r3, #6
 80002a6:	17d3      	asrs	r3, r2, #31
 80002a8:	1ac3      	subs	r3, r0, r3
 80002aa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80002ae:	fb00 f303 	mul.w	r3, r0, r3
 80002b2:	1ad3      	subs	r3, r2, r3
 80002b4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	3301      	adds	r3, #1
 80002ba:	60fb      	str	r3, [r7, #12]
 80002bc:	68fa      	ldr	r2, [r7, #12]
 80002be:	683b      	ldr	r3, [r7, #0]
 80002c0:	429a      	cmp	r2, r3
 80002c2:	d3e5      	bcc.n	8000290 <array_fill_numbers+0x10>
    }

}
 80002c4:	bf00      	nop
 80002c6:	bf00      	nop
 80002c8:	3710      	adds	r7, #16
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	10624dd3 	.word	0x10624dd3

080002d4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002e0:	6879      	ldr	r1, [r7, #4]
 80002e2:	480e      	ldr	r0, [pc, #56]	@ (800031c <display_numbers+0x48>)
 80002e4:	f000 fae6 	bl	80008b4 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002e8:	2300      	movs	r3, #0
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	e00b      	b.n	8000306 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002ee:	697b      	ldr	r3, [r7, #20]
 80002f0:	009b      	lsls	r3, r3, #2
 80002f2:	68fa      	ldr	r2, [r7, #12]
 80002f4:	4413      	add	r3, r2
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4619      	mov	r1, r3
 80002fa:	4809      	ldr	r0, [pc, #36]	@ (8000320 <display_numbers+0x4c>)
 80002fc:	f000 fada 	bl	80008b4 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000300:	697b      	ldr	r3, [r7, #20]
 8000302:	3301      	adds	r3, #1
 8000304:	617b      	str	r3, [r7, #20]
 8000306:	697a      	ldr	r2, [r7, #20]
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	429a      	cmp	r2, r3
 800030c:	d3ef      	bcc.n	80002ee <display_numbers+0x1a>
    }

    printf("\n");
 800030e:	200a      	movs	r0, #10
 8000310:	f000 fae2 	bl	80008d8 <putchar>
}
 8000314:	bf00      	nop
 8000316:	3718      	adds	r7, #24
 8000318:	46bd      	mov	sp, r7
 800031a:	bd80      	pop	{r7, pc}
 800031c:	08001728 	.word	0x08001728
 8000320:	0800172c 	.word	0x0800172c

08000324 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000324:	b480      	push	{r7}
 8000326:	b085      	sub	sp, #20
 8000328:	af00      	add	r7, sp, #0
 800032a:	6078      	str	r0, [r7, #4]
 800032c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000334:	683b      	ldr	r3, [r7, #0]
 8000336:	681a      	ldr	r2, [r3, #0]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800033c:	683b      	ldr	r3, [r7, #0]
 800033e:	68fa      	ldr	r2, [r7, #12]
 8000340:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000342:	4b04      	ldr	r3, [pc, #16]	@ (8000354 <swap_numbers+0x30>)
 8000344:	220a      	movs	r2, #10
 8000346:	601a      	str	r2, [r3, #0]
}
 8000348:	bf00      	nop
 800034a:	3714      	adds	r7, #20
 800034c:	46bd      	mov	sp, r7
 800034e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000352:	4770      	bx	lr
 8000354:	20000044 	.word	0x20000044

08000358 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b086      	sub	sp, #24
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
 8000360:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000362:	2300      	movs	r3, #0
 8000364:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000366:	2300      	movs	r3, #0
 8000368:	617b      	str	r3, [r7, #20]
 800036a:	e02f      	b.n	80003cc <bubble_sort+0x74>
    {
        flag=0;
 800036c:	2300      	movs	r3, #0
 800036e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000370:	2300      	movs	r3, #0
 8000372:	613b      	str	r3, [r7, #16]
 8000374:	e01d      	b.n	80003b2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000376:	693b      	ldr	r3, [r7, #16]
 8000378:	009b      	lsls	r3, r3, #2
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	4413      	add	r3, r2
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	693b      	ldr	r3, [r7, #16]
 8000382:	3301      	adds	r3, #1
 8000384:	009b      	lsls	r3, r3, #2
 8000386:	6879      	ldr	r1, [r7, #4]
 8000388:	440b      	add	r3, r1
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	429a      	cmp	r2, r3
 800038e:	dd0d      	ble.n	80003ac <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	009b      	lsls	r3, r3, #2
 8000394:	687a      	ldr	r2, [r7, #4]
 8000396:	18d0      	adds	r0, r2, r3
 8000398:	693b      	ldr	r3, [r7, #16]
 800039a:	3301      	adds	r3, #1
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	687a      	ldr	r2, [r7, #4]
 80003a0:	4413      	add	r3, r2
 80003a2:	4619      	mov	r1, r3
 80003a4:	f7ff ffbe 	bl	8000324 <swap_numbers>
                flag=1;
 80003a8:	2301      	movs	r3, #1
 80003aa:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003ac:	693b      	ldr	r3, [r7, #16]
 80003ae:	3301      	adds	r3, #1
 80003b0:	613b      	str	r3, [r7, #16]
 80003b2:	697b      	ldr	r3, [r7, #20]
 80003b4:	683a      	ldr	r2, [r7, #0]
 80003b6:	1ad3      	subs	r3, r2, r3
 80003b8:	1e5a      	subs	r2, r3, #1
 80003ba:	693b      	ldr	r3, [r7, #16]
 80003bc:	429a      	cmp	r2, r3
 80003be:	d8da      	bhi.n	8000376 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	d008      	beq.n	80003d8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003c6:	697b      	ldr	r3, [r7, #20]
 80003c8:	3301      	adds	r3, #1
 80003ca:	617b      	str	r3, [r7, #20]
 80003cc:	683b      	ldr	r3, [r7, #0]
 80003ce:	1e5a      	subs	r2, r3, #1
 80003d0:	697b      	ldr	r3, [r7, #20]
 80003d2:	429a      	cmp	r2, r3
 80003d4:	d8ca      	bhi.n	800036c <bubble_sort+0x14>
            break;
    }
}
 80003d6:	e000      	b.n	80003da <bubble_sort+0x82>
            break;
 80003d8:	bf00      	nop
}
 80003da:	bf00      	nop
 80003dc:	3718      	adds	r7, #24
 80003de:	46bd      	mov	sp, r7
 80003e0:	bd80      	pop	{r7, pc}

080003e2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003e2:	b480      	push	{r7}
 80003e4:	b087      	sub	sp, #28
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	6078      	str	r0, [r7, #4]
 80003ea:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003ec:	2301      	movs	r3, #1
 80003ee:	617b      	str	r3, [r7, #20]
 80003f0:	e02c      	b.n	800044c <insertion_sort+0x6a>
     {
         j=i-1;
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	3b01      	subs	r3, #1
 80003f6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80003f8:	697b      	ldr	r3, [r7, #20]
 80003fa:	009b      	lsls	r3, r3, #2
 80003fc:	687a      	ldr	r2, [r7, #4]
 80003fe:	4413      	add	r3, r2
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000404:	e00d      	b.n	8000422 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000406:	693b      	ldr	r3, [r7, #16]
 8000408:	009b      	lsls	r3, r3, #2
 800040a:	687a      	ldr	r2, [r7, #4]
 800040c:	441a      	add	r2, r3
 800040e:	693b      	ldr	r3, [r7, #16]
 8000410:	3301      	adds	r3, #1
 8000412:	009b      	lsls	r3, r3, #2
 8000414:	6879      	ldr	r1, [r7, #4]
 8000416:	440b      	add	r3, r1
 8000418:	6812      	ldr	r2, [r2, #0]
 800041a:	601a      	str	r2, [r3, #0]
             j--;
 800041c:	693b      	ldr	r3, [r7, #16]
 800041e:	3b01      	subs	r3, #1
 8000420:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000422:	693b      	ldr	r3, [r7, #16]
 8000424:	2b00      	cmp	r3, #0
 8000426:	db07      	blt.n	8000438 <insertion_sort+0x56>
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	4413      	add	r3, r2
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	429a      	cmp	r2, r3
 8000436:	dbe6      	blt.n	8000406 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	3301      	adds	r3, #1
 800043c:	009b      	lsls	r3, r3, #2
 800043e:	687a      	ldr	r2, [r7, #4]
 8000440:	4413      	add	r3, r2
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000446:	697b      	ldr	r3, [r7, #20]
 8000448:	3301      	adds	r3, #1
 800044a:	617b      	str	r3, [r7, #20]
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	683a      	ldr	r2, [r7, #0]
 8000450:	429a      	cmp	r2, r3
 8000452:	d8ce      	bhi.n	80003f2 <insertion_sort+0x10>
     }


}
 8000454:	bf00      	nop
 8000456:	bf00      	nop
 8000458:	371c      	adds	r7, #28
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
	...

08000464 <main>:



int main()
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b082      	sub	sp, #8
 8000468:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800046a:	2311      	movs	r3, #17
 800046c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800046e:	6879      	ldr	r1, [r7, #4]
 8000470:	4813      	ldr	r0, [pc, #76]	@ (80004c0 <main+0x5c>)
 8000472:	f7ff ff05 	bl	8000280 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000476:	4a13      	ldr	r2, [pc, #76]	@ (80004c4 <main+0x60>)
 8000478:	6879      	ldr	r1, [r7, #4]
 800047a:	4811      	ldr	r0, [pc, #68]	@ (80004c0 <main+0x5c>)
 800047c:	f7ff ff2a 	bl	80002d4 <display_numbers>

    bubble_sort(numbers,len);
 8000480:	6879      	ldr	r1, [r7, #4]
 8000482:	480f      	ldr	r0, [pc, #60]	@ (80004c0 <main+0x5c>)
 8000484:	f7ff ff68 	bl	8000358 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000488:	4a0f      	ldr	r2, [pc, #60]	@ (80004c8 <main+0x64>)
 800048a:	6879      	ldr	r1, [r7, #4]
 800048c:	480c      	ldr	r0, [pc, #48]	@ (80004c0 <main+0x5c>)
 800048e:	f7ff ff21 	bl	80002d4 <display_numbers>

    array_fill_numbers(numbers,len);
 8000492:	6879      	ldr	r1, [r7, #4]
 8000494:	480a      	ldr	r0, [pc, #40]	@ (80004c0 <main+0x5c>)
 8000496:	f7ff fef3 	bl	8000280 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800049a:	4a0c      	ldr	r2, [pc, #48]	@ (80004cc <main+0x68>)
 800049c:	6879      	ldr	r1, [r7, #4]
 800049e:	4808      	ldr	r0, [pc, #32]	@ (80004c0 <main+0x5c>)
 80004a0:	f7ff ff18 	bl	80002d4 <display_numbers>

    insertion_sort(numbers,len);
 80004a4:	6879      	ldr	r1, [r7, #4]
 80004a6:	4806      	ldr	r0, [pc, #24]	@ (80004c0 <main+0x5c>)
 80004a8:	f7ff ff9b 	bl	80003e2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004ac:	4a08      	ldr	r2, [pc, #32]	@ (80004d0 <main+0x6c>)
 80004ae:	6879      	ldr	r1, [r7, #4]
 80004b0:	4803      	ldr	r0, [pc, #12]	@ (80004c0 <main+0x5c>)
 80004b2:	f7ff ff0f 	bl	80002d4 <display_numbers>



    return 0;
 80004b6:	2300      	movs	r3, #0
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	3708      	adds	r7, #8
 80004bc:	46bd      	mov	sp, r7
 80004be:	bd80      	pop	{r7, pc}
 80004c0:	20000000 	.word	0x20000000
 80004c4:	08001734 	.word	0x08001734
 80004c8:	08001748 	.word	0x08001748
 80004cc:	0800175c 	.word	0x0800175c
 80004d0:	08001770 	.word	0x08001770

080004d4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004d4:	b480      	push	{r7}
 80004d6:	af00      	add	r7, sp, #0
  return 1;
 80004d8:	2301      	movs	r3, #1
}
 80004da:	4618      	mov	r0, r3
 80004dc:	46bd      	mov	sp, r7
 80004de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e2:	4770      	bx	lr

080004e4 <_kill>:

int _kill(int pid, int sig)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b082      	sub	sp, #8
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	6078      	str	r0, [r7, #4]
 80004ec:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80004ee:	f000 fa8d 	bl	8000a0c <__errno>
 80004f2:	4603      	mov	r3, r0
 80004f4:	2216      	movs	r2, #22
 80004f6:	601a      	str	r2, [r3, #0]
  return -1;
 80004f8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80004fc:	4618      	mov	r0, r3
 80004fe:	3708      	adds	r7, #8
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}

08000504 <_exit>:

void _exit (int status)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b082      	sub	sp, #8
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800050c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8000510:	6878      	ldr	r0, [r7, #4]
 8000512:	f7ff ffe7 	bl	80004e4 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000516:	bf00      	nop
 8000518:	e7fd      	b.n	8000516 <_exit+0x12>

0800051a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800051a:	b580      	push	{r7, lr}
 800051c:	b086      	sub	sp, #24
 800051e:	af00      	add	r7, sp, #0
 8000520:	60f8      	str	r0, [r7, #12]
 8000522:	60b9      	str	r1, [r7, #8]
 8000524:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000526:	2300      	movs	r3, #0
 8000528:	617b      	str	r3, [r7, #20]
 800052a:	e00a      	b.n	8000542 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800052c:	f3af 8000 	nop.w
 8000530:	4601      	mov	r1, r0
 8000532:	68bb      	ldr	r3, [r7, #8]
 8000534:	1c5a      	adds	r2, r3, #1
 8000536:	60ba      	str	r2, [r7, #8]
 8000538:	b2ca      	uxtb	r2, r1
 800053a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800053c:	697b      	ldr	r3, [r7, #20]
 800053e:	3301      	adds	r3, #1
 8000540:	617b      	str	r3, [r7, #20]
 8000542:	697a      	ldr	r2, [r7, #20]
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	429a      	cmp	r2, r3
 8000548:	dbf0      	blt.n	800052c <_read+0x12>
  }

  return len;
 800054a:	687b      	ldr	r3, [r7, #4]
}
 800054c:	4618      	mov	r0, r3
 800054e:	3718      	adds	r7, #24
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}

08000554 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000554:	b580      	push	{r7, lr}
 8000556:	b086      	sub	sp, #24
 8000558:	af00      	add	r7, sp, #0
 800055a:	60f8      	str	r0, [r7, #12]
 800055c:	60b9      	str	r1, [r7, #8]
 800055e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000560:	2300      	movs	r3, #0
 8000562:	617b      	str	r3, [r7, #20]
 8000564:	e009      	b.n	800057a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000566:	68bb      	ldr	r3, [r7, #8]
 8000568:	1c5a      	adds	r2, r3, #1
 800056a:	60ba      	str	r2, [r7, #8]
 800056c:	781b      	ldrb	r3, [r3, #0]
 800056e:	4618      	mov	r0, r3
 8000570:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000574:	697b      	ldr	r3, [r7, #20]
 8000576:	3301      	adds	r3, #1
 8000578:	617b      	str	r3, [r7, #20]
 800057a:	697a      	ldr	r2, [r7, #20]
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	429a      	cmp	r2, r3
 8000580:	dbf1      	blt.n	8000566 <_write+0x12>
  }
  return len;
 8000582:	687b      	ldr	r3, [r7, #4]
}
 8000584:	4618      	mov	r0, r3
 8000586:	3718      	adds	r7, #24
 8000588:	46bd      	mov	sp, r7
 800058a:	bd80      	pop	{r7, pc}

0800058c <_close>:

int _close(int file)
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000594:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8000598:	4618      	mov	r0, r3
 800059a:	370c      	adds	r7, #12
 800059c:	46bd      	mov	sp, r7
 800059e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a2:	4770      	bx	lr

080005a4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80005ae:	683b      	ldr	r3, [r7, #0]
 80005b0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80005b4:	605a      	str	r2, [r3, #4]
  return 0;
 80005b6:	2300      	movs	r3, #0
}
 80005b8:	4618      	mov	r0, r3
 80005ba:	370c      	adds	r7, #12
 80005bc:	46bd      	mov	sp, r7
 80005be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c2:	4770      	bx	lr

080005c4 <_isatty>:

int _isatty(int file)
{
 80005c4:	b480      	push	{r7}
 80005c6:	b083      	sub	sp, #12
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005cc:	2301      	movs	r3, #1
}
 80005ce:	4618      	mov	r0, r3
 80005d0:	370c      	adds	r7, #12
 80005d2:	46bd      	mov	sp, r7
 80005d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d8:	4770      	bx	lr

080005da <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005da:	b480      	push	{r7}
 80005dc:	b085      	sub	sp, #20
 80005de:	af00      	add	r7, sp, #0
 80005e0:	60f8      	str	r0, [r7, #12]
 80005e2:	60b9      	str	r1, [r7, #8]
 80005e4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80005e6:	2300      	movs	r3, #0
}
 80005e8:	4618      	mov	r0, r3
 80005ea:	3714      	adds	r7, #20
 80005ec:	46bd      	mov	sp, r7
 80005ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f2:	4770      	bx	lr

080005f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b086      	sub	sp, #24
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005fc:	4a14      	ldr	r2, [pc, #80]	@ (8000650 <_sbrk+0x5c>)
 80005fe:	4b15      	ldr	r3, [pc, #84]	@ (8000654 <_sbrk+0x60>)
 8000600:	1ad3      	subs	r3, r2, r3
 8000602:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000604:	697b      	ldr	r3, [r7, #20]
 8000606:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000608:	4b13      	ldr	r3, [pc, #76]	@ (8000658 <_sbrk+0x64>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d102      	bne.n	8000616 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000610:	4b11      	ldr	r3, [pc, #68]	@ (8000658 <_sbrk+0x64>)
 8000612:	4a12      	ldr	r2, [pc, #72]	@ (800065c <_sbrk+0x68>)
 8000614:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000616:	4b10      	ldr	r3, [pc, #64]	@ (8000658 <_sbrk+0x64>)
 8000618:	681a      	ldr	r2, [r3, #0]
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	4413      	add	r3, r2
 800061e:	693a      	ldr	r2, [r7, #16]
 8000620:	429a      	cmp	r2, r3
 8000622:	d207      	bcs.n	8000634 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000624:	f000 f9f2 	bl	8000a0c <__errno>
 8000628:	4603      	mov	r3, r0
 800062a:	220c      	movs	r2, #12
 800062c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800062e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000632:	e009      	b.n	8000648 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000634:	4b08      	ldr	r3, [pc, #32]	@ (8000658 <_sbrk+0x64>)
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800063a:	4b07      	ldr	r3, [pc, #28]	@ (8000658 <_sbrk+0x64>)
 800063c:	681a      	ldr	r2, [r3, #0]
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	4413      	add	r3, r2
 8000642:	4a05      	ldr	r2, [pc, #20]	@ (8000658 <_sbrk+0x64>)
 8000644:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000646:	68fb      	ldr	r3, [r7, #12]
}
 8000648:	4618      	mov	r0, r3
 800064a:	3718      	adds	r7, #24
 800064c:	46bd      	mov	sp, r7
 800064e:	bd80      	pop	{r7, pc}
 8000650:	20018000 	.word	0x20018000
 8000654:	00000400 	.word	0x00000400
 8000658:	200000c0 	.word	0x200000c0
 800065c:	20000210 	.word	0x20000210

08000660 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000660:	480d      	ldr	r0, [pc, #52]	@ (8000698 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000662:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000664:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000668:	480c      	ldr	r0, [pc, #48]	@ (800069c <LoopForever+0x6>)
  ldr r1, =_edata
 800066a:	490d      	ldr	r1, [pc, #52]	@ (80006a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800066c:	4a0d      	ldr	r2, [pc, #52]	@ (80006a4 <LoopForever+0xe>)
  movs r3, #0
 800066e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000670:	e002      	b.n	8000678 <LoopCopyDataInit>

08000672 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000672:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000674:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000676:	3304      	adds	r3, #4

08000678 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000678:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800067a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800067c:	d3f9      	bcc.n	8000672 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800067e:	4a0a      	ldr	r2, [pc, #40]	@ (80006a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000680:	4c0a      	ldr	r4, [pc, #40]	@ (80006ac <LoopForever+0x16>)
  movs r3, #0
 8000682:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000684:	e001      	b.n	800068a <LoopFillZerobss>

08000686 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000686:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000688:	3204      	adds	r2, #4

0800068a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800068a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800068c:	d3fb      	bcc.n	8000686 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800068e:	f000 f9c3 	bl	8000a18 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000692:	f7ff fee7 	bl	8000464 <main>

08000696 <LoopForever>:

LoopForever:
  b LoopForever
 8000696:	e7fe      	b.n	8000696 <LoopForever>
  ldr   r0, =_estack
 8000698:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006a0:	200000a4 	.word	0x200000a4
  ldr r2, =_sidata
 80006a4:	08001874 	.word	0x08001874
  ldr r2, =_sbss
 80006a8:	200000a4 	.word	0x200000a4
  ldr r4, =_ebss
 80006ac:	20000210 	.word	0x20000210

080006b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006b0:	e7fe      	b.n	80006b0 <ADC_IRQHandler>
	...

080006b4 <rand>:
 80006b4:	4b16      	ldr	r3, [pc, #88]	@ (8000710 <rand+0x5c>)
 80006b6:	b510      	push	{r4, lr}
 80006b8:	681c      	ldr	r4, [r3, #0]
 80006ba:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80006bc:	b9b3      	cbnz	r3, 80006ec <rand+0x38>
 80006be:	2018      	movs	r0, #24
 80006c0:	f000 fa3a 	bl	8000b38 <malloc>
 80006c4:	4602      	mov	r2, r0
 80006c6:	6320      	str	r0, [r4, #48]	@ 0x30
 80006c8:	b920      	cbnz	r0, 80006d4 <rand+0x20>
 80006ca:	4b12      	ldr	r3, [pc, #72]	@ (8000714 <rand+0x60>)
 80006cc:	4812      	ldr	r0, [pc, #72]	@ (8000718 <rand+0x64>)
 80006ce:	2152      	movs	r1, #82	@ 0x52
 80006d0:	f000 f9ca 	bl	8000a68 <__assert_func>
 80006d4:	4911      	ldr	r1, [pc, #68]	@ (800071c <rand+0x68>)
 80006d6:	4b12      	ldr	r3, [pc, #72]	@ (8000720 <rand+0x6c>)
 80006d8:	e9c0 1300 	strd	r1, r3, [r0]
 80006dc:	4b11      	ldr	r3, [pc, #68]	@ (8000724 <rand+0x70>)
 80006de:	6083      	str	r3, [r0, #8]
 80006e0:	230b      	movs	r3, #11
 80006e2:	8183      	strh	r3, [r0, #12]
 80006e4:	2100      	movs	r1, #0
 80006e6:	2001      	movs	r0, #1
 80006e8:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80006ec:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80006ee:	480e      	ldr	r0, [pc, #56]	@ (8000728 <rand+0x74>)
 80006f0:	690b      	ldr	r3, [r1, #16]
 80006f2:	694c      	ldr	r4, [r1, #20]
 80006f4:	4a0d      	ldr	r2, [pc, #52]	@ (800072c <rand+0x78>)
 80006f6:	4358      	muls	r0, r3
 80006f8:	fb02 0004 	mla	r0, r2, r4, r0
 80006fc:	fba3 3202 	umull	r3, r2, r3, r2
 8000700:	3301      	adds	r3, #1
 8000702:	eb40 0002 	adc.w	r0, r0, r2
 8000706:	e9c1 3004 	strd	r3, r0, [r1, #16]
 800070a:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 800070e:	bd10      	pop	{r4, pc}
 8000710:	20000054 	.word	0x20000054
 8000714:	08001783 	.word	0x08001783
 8000718:	0800179a 	.word	0x0800179a
 800071c:	abcd330e 	.word	0xabcd330e
 8000720:	e66d1234 	.word	0xe66d1234
 8000724:	0005deec 	.word	0x0005deec
 8000728:	5851f42d 	.word	0x5851f42d
 800072c:	4c957f2d 	.word	0x4c957f2d

08000730 <std>:
 8000730:	2300      	movs	r3, #0
 8000732:	b510      	push	{r4, lr}
 8000734:	4604      	mov	r4, r0
 8000736:	e9c0 3300 	strd	r3, r3, [r0]
 800073a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800073e:	6083      	str	r3, [r0, #8]
 8000740:	8181      	strh	r1, [r0, #12]
 8000742:	6643      	str	r3, [r0, #100]	@ 0x64
 8000744:	81c2      	strh	r2, [r0, #14]
 8000746:	6183      	str	r3, [r0, #24]
 8000748:	4619      	mov	r1, r3
 800074a:	2208      	movs	r2, #8
 800074c:	305c      	adds	r0, #92	@ 0x5c
 800074e:	f000 f90e 	bl	800096e <memset>
 8000752:	4b0d      	ldr	r3, [pc, #52]	@ (8000788 <std+0x58>)
 8000754:	6263      	str	r3, [r4, #36]	@ 0x24
 8000756:	4b0d      	ldr	r3, [pc, #52]	@ (800078c <std+0x5c>)
 8000758:	62a3      	str	r3, [r4, #40]	@ 0x28
 800075a:	4b0d      	ldr	r3, [pc, #52]	@ (8000790 <std+0x60>)
 800075c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800075e:	4b0d      	ldr	r3, [pc, #52]	@ (8000794 <std+0x64>)
 8000760:	6323      	str	r3, [r4, #48]	@ 0x30
 8000762:	4b0d      	ldr	r3, [pc, #52]	@ (8000798 <std+0x68>)
 8000764:	6224      	str	r4, [r4, #32]
 8000766:	429c      	cmp	r4, r3
 8000768:	d006      	beq.n	8000778 <std+0x48>
 800076a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800076e:	4294      	cmp	r4, r2
 8000770:	d002      	beq.n	8000778 <std+0x48>
 8000772:	33d0      	adds	r3, #208	@ 0xd0
 8000774:	429c      	cmp	r4, r3
 8000776:	d105      	bne.n	8000784 <std+0x54>
 8000778:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800077c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000780:	f000 b96e 	b.w	8000a60 <__retarget_lock_init_recursive>
 8000784:	bd10      	pop	{r4, pc}
 8000786:	bf00      	nop
 8000788:	080008e9 	.word	0x080008e9
 800078c:	0800090b 	.word	0x0800090b
 8000790:	08000943 	.word	0x08000943
 8000794:	08000967 	.word	0x08000967
 8000798:	200000c4 	.word	0x200000c4

0800079c <stdio_exit_handler>:
 800079c:	4a02      	ldr	r2, [pc, #8]	@ (80007a8 <stdio_exit_handler+0xc>)
 800079e:	4903      	ldr	r1, [pc, #12]	@ (80007ac <stdio_exit_handler+0x10>)
 80007a0:	4803      	ldr	r0, [pc, #12]	@ (80007b0 <stdio_exit_handler+0x14>)
 80007a2:	f000 b869 	b.w	8000878 <_fwalk_sglue>
 80007a6:	bf00      	nop
 80007a8:	20000048 	.word	0x20000048
 80007ac:	0800134d 	.word	0x0800134d
 80007b0:	20000058 	.word	0x20000058

080007b4 <cleanup_stdio>:
 80007b4:	6841      	ldr	r1, [r0, #4]
 80007b6:	4b0c      	ldr	r3, [pc, #48]	@ (80007e8 <cleanup_stdio+0x34>)
 80007b8:	4299      	cmp	r1, r3
 80007ba:	b510      	push	{r4, lr}
 80007bc:	4604      	mov	r4, r0
 80007be:	d001      	beq.n	80007c4 <cleanup_stdio+0x10>
 80007c0:	f000 fdc4 	bl	800134c <_fflush_r>
 80007c4:	68a1      	ldr	r1, [r4, #8]
 80007c6:	4b09      	ldr	r3, [pc, #36]	@ (80007ec <cleanup_stdio+0x38>)
 80007c8:	4299      	cmp	r1, r3
 80007ca:	d002      	beq.n	80007d2 <cleanup_stdio+0x1e>
 80007cc:	4620      	mov	r0, r4
 80007ce:	f000 fdbd 	bl	800134c <_fflush_r>
 80007d2:	68e1      	ldr	r1, [r4, #12]
 80007d4:	4b06      	ldr	r3, [pc, #24]	@ (80007f0 <cleanup_stdio+0x3c>)
 80007d6:	4299      	cmp	r1, r3
 80007d8:	d004      	beq.n	80007e4 <cleanup_stdio+0x30>
 80007da:	4620      	mov	r0, r4
 80007dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007e0:	f000 bdb4 	b.w	800134c <_fflush_r>
 80007e4:	bd10      	pop	{r4, pc}
 80007e6:	bf00      	nop
 80007e8:	200000c4 	.word	0x200000c4
 80007ec:	2000012c 	.word	0x2000012c
 80007f0:	20000194 	.word	0x20000194

080007f4 <global_stdio_init.part.0>:
 80007f4:	b510      	push	{r4, lr}
 80007f6:	4b0b      	ldr	r3, [pc, #44]	@ (8000824 <global_stdio_init.part.0+0x30>)
 80007f8:	4c0b      	ldr	r4, [pc, #44]	@ (8000828 <global_stdio_init.part.0+0x34>)
 80007fa:	4a0c      	ldr	r2, [pc, #48]	@ (800082c <global_stdio_init.part.0+0x38>)
 80007fc:	601a      	str	r2, [r3, #0]
 80007fe:	4620      	mov	r0, r4
 8000800:	2200      	movs	r2, #0
 8000802:	2104      	movs	r1, #4
 8000804:	f7ff ff94 	bl	8000730 <std>
 8000808:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800080c:	2201      	movs	r2, #1
 800080e:	2109      	movs	r1, #9
 8000810:	f7ff ff8e 	bl	8000730 <std>
 8000814:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000818:	2202      	movs	r2, #2
 800081a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800081e:	2112      	movs	r1, #18
 8000820:	f7ff bf86 	b.w	8000730 <std>
 8000824:	200001fc 	.word	0x200001fc
 8000828:	200000c4 	.word	0x200000c4
 800082c:	0800079d 	.word	0x0800079d

08000830 <__sfp_lock_acquire>:
 8000830:	4801      	ldr	r0, [pc, #4]	@ (8000838 <__sfp_lock_acquire+0x8>)
 8000832:	f000 b916 	b.w	8000a62 <__retarget_lock_acquire_recursive>
 8000836:	bf00      	nop
 8000838:	20000205 	.word	0x20000205

0800083c <__sfp_lock_release>:
 800083c:	4801      	ldr	r0, [pc, #4]	@ (8000844 <__sfp_lock_release+0x8>)
 800083e:	f000 b911 	b.w	8000a64 <__retarget_lock_release_recursive>
 8000842:	bf00      	nop
 8000844:	20000205 	.word	0x20000205

08000848 <__sinit>:
 8000848:	b510      	push	{r4, lr}
 800084a:	4604      	mov	r4, r0
 800084c:	f7ff fff0 	bl	8000830 <__sfp_lock_acquire>
 8000850:	6a23      	ldr	r3, [r4, #32]
 8000852:	b11b      	cbz	r3, 800085c <__sinit+0x14>
 8000854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000858:	f7ff bff0 	b.w	800083c <__sfp_lock_release>
 800085c:	4b04      	ldr	r3, [pc, #16]	@ (8000870 <__sinit+0x28>)
 800085e:	6223      	str	r3, [r4, #32]
 8000860:	4b04      	ldr	r3, [pc, #16]	@ (8000874 <__sinit+0x2c>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	2b00      	cmp	r3, #0
 8000866:	d1f5      	bne.n	8000854 <__sinit+0xc>
 8000868:	f7ff ffc4 	bl	80007f4 <global_stdio_init.part.0>
 800086c:	e7f2      	b.n	8000854 <__sinit+0xc>
 800086e:	bf00      	nop
 8000870:	080007b5 	.word	0x080007b5
 8000874:	200001fc 	.word	0x200001fc

08000878 <_fwalk_sglue>:
 8000878:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800087c:	4607      	mov	r7, r0
 800087e:	4688      	mov	r8, r1
 8000880:	4614      	mov	r4, r2
 8000882:	2600      	movs	r6, #0
 8000884:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000888:	f1b9 0901 	subs.w	r9, r9, #1
 800088c:	d505      	bpl.n	800089a <_fwalk_sglue+0x22>
 800088e:	6824      	ldr	r4, [r4, #0]
 8000890:	2c00      	cmp	r4, #0
 8000892:	d1f7      	bne.n	8000884 <_fwalk_sglue+0xc>
 8000894:	4630      	mov	r0, r6
 8000896:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800089a:	89ab      	ldrh	r3, [r5, #12]
 800089c:	2b01      	cmp	r3, #1
 800089e:	d907      	bls.n	80008b0 <_fwalk_sglue+0x38>
 80008a0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008a4:	3301      	adds	r3, #1
 80008a6:	d003      	beq.n	80008b0 <_fwalk_sglue+0x38>
 80008a8:	4629      	mov	r1, r5
 80008aa:	4638      	mov	r0, r7
 80008ac:	47c0      	blx	r8
 80008ae:	4306      	orrs	r6, r0
 80008b0:	3568      	adds	r5, #104	@ 0x68
 80008b2:	e7e9      	b.n	8000888 <_fwalk_sglue+0x10>

080008b4 <iprintf>:
 80008b4:	b40f      	push	{r0, r1, r2, r3}
 80008b6:	b507      	push	{r0, r1, r2, lr}
 80008b8:	4906      	ldr	r1, [pc, #24]	@ (80008d4 <iprintf+0x20>)
 80008ba:	ab04      	add	r3, sp, #16
 80008bc:	6808      	ldr	r0, [r1, #0]
 80008be:	f853 2b04 	ldr.w	r2, [r3], #4
 80008c2:	6881      	ldr	r1, [r0, #8]
 80008c4:	9301      	str	r3, [sp, #4]
 80008c6:	f000 fa17 	bl	8000cf8 <_vfiprintf_r>
 80008ca:	b003      	add	sp, #12
 80008cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80008d0:	b004      	add	sp, #16
 80008d2:	4770      	bx	lr
 80008d4:	20000054 	.word	0x20000054

080008d8 <putchar>:
 80008d8:	4b02      	ldr	r3, [pc, #8]	@ (80008e4 <putchar+0xc>)
 80008da:	4601      	mov	r1, r0
 80008dc:	6818      	ldr	r0, [r3, #0]
 80008de:	6882      	ldr	r2, [r0, #8]
 80008e0:	f000 bd6e 	b.w	80013c0 <_putc_r>
 80008e4:	20000054 	.word	0x20000054

080008e8 <__sread>:
 80008e8:	b510      	push	{r4, lr}
 80008ea:	460c      	mov	r4, r1
 80008ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008f0:	f000 f868 	bl	80009c4 <_read_r>
 80008f4:	2800      	cmp	r0, #0
 80008f6:	bfab      	itete	ge
 80008f8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80008fa:	89a3      	ldrhlt	r3, [r4, #12]
 80008fc:	181b      	addge	r3, r3, r0
 80008fe:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000902:	bfac      	ite	ge
 8000904:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000906:	81a3      	strhlt	r3, [r4, #12]
 8000908:	bd10      	pop	{r4, pc}

0800090a <__swrite>:
 800090a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800090e:	461f      	mov	r7, r3
 8000910:	898b      	ldrh	r3, [r1, #12]
 8000912:	05db      	lsls	r3, r3, #23
 8000914:	4605      	mov	r5, r0
 8000916:	460c      	mov	r4, r1
 8000918:	4616      	mov	r6, r2
 800091a:	d505      	bpl.n	8000928 <__swrite+0x1e>
 800091c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000920:	2302      	movs	r3, #2
 8000922:	2200      	movs	r2, #0
 8000924:	f000 f83c 	bl	80009a0 <_lseek_r>
 8000928:	89a3      	ldrh	r3, [r4, #12]
 800092a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800092e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000932:	81a3      	strh	r3, [r4, #12]
 8000934:	4632      	mov	r2, r6
 8000936:	463b      	mov	r3, r7
 8000938:	4628      	mov	r0, r5
 800093a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800093e:	f000 b853 	b.w	80009e8 <_write_r>

08000942 <__sseek>:
 8000942:	b510      	push	{r4, lr}
 8000944:	460c      	mov	r4, r1
 8000946:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800094a:	f000 f829 	bl	80009a0 <_lseek_r>
 800094e:	1c43      	adds	r3, r0, #1
 8000950:	89a3      	ldrh	r3, [r4, #12]
 8000952:	bf15      	itete	ne
 8000954:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000956:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800095a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800095e:	81a3      	strheq	r3, [r4, #12]
 8000960:	bf18      	it	ne
 8000962:	81a3      	strhne	r3, [r4, #12]
 8000964:	bd10      	pop	{r4, pc}

08000966 <__sclose>:
 8000966:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800096a:	f000 b809 	b.w	8000980 <_close_r>

0800096e <memset>:
 800096e:	4402      	add	r2, r0
 8000970:	4603      	mov	r3, r0
 8000972:	4293      	cmp	r3, r2
 8000974:	d100      	bne.n	8000978 <memset+0xa>
 8000976:	4770      	bx	lr
 8000978:	f803 1b01 	strb.w	r1, [r3], #1
 800097c:	e7f9      	b.n	8000972 <memset+0x4>
	...

08000980 <_close_r>:
 8000980:	b538      	push	{r3, r4, r5, lr}
 8000982:	4d06      	ldr	r5, [pc, #24]	@ (800099c <_close_r+0x1c>)
 8000984:	2300      	movs	r3, #0
 8000986:	4604      	mov	r4, r0
 8000988:	4608      	mov	r0, r1
 800098a:	602b      	str	r3, [r5, #0]
 800098c:	f7ff fdfe 	bl	800058c <_close>
 8000990:	1c43      	adds	r3, r0, #1
 8000992:	d102      	bne.n	800099a <_close_r+0x1a>
 8000994:	682b      	ldr	r3, [r5, #0]
 8000996:	b103      	cbz	r3, 800099a <_close_r+0x1a>
 8000998:	6023      	str	r3, [r4, #0]
 800099a:	bd38      	pop	{r3, r4, r5, pc}
 800099c:	20000200 	.word	0x20000200

080009a0 <_lseek_r>:
 80009a0:	b538      	push	{r3, r4, r5, lr}
 80009a2:	4d07      	ldr	r5, [pc, #28]	@ (80009c0 <_lseek_r+0x20>)
 80009a4:	4604      	mov	r4, r0
 80009a6:	4608      	mov	r0, r1
 80009a8:	4611      	mov	r1, r2
 80009aa:	2200      	movs	r2, #0
 80009ac:	602a      	str	r2, [r5, #0]
 80009ae:	461a      	mov	r2, r3
 80009b0:	f7ff fe13 	bl	80005da <_lseek>
 80009b4:	1c43      	adds	r3, r0, #1
 80009b6:	d102      	bne.n	80009be <_lseek_r+0x1e>
 80009b8:	682b      	ldr	r3, [r5, #0]
 80009ba:	b103      	cbz	r3, 80009be <_lseek_r+0x1e>
 80009bc:	6023      	str	r3, [r4, #0]
 80009be:	bd38      	pop	{r3, r4, r5, pc}
 80009c0:	20000200 	.word	0x20000200

080009c4 <_read_r>:
 80009c4:	b538      	push	{r3, r4, r5, lr}
 80009c6:	4d07      	ldr	r5, [pc, #28]	@ (80009e4 <_read_r+0x20>)
 80009c8:	4604      	mov	r4, r0
 80009ca:	4608      	mov	r0, r1
 80009cc:	4611      	mov	r1, r2
 80009ce:	2200      	movs	r2, #0
 80009d0:	602a      	str	r2, [r5, #0]
 80009d2:	461a      	mov	r2, r3
 80009d4:	f7ff fda1 	bl	800051a <_read>
 80009d8:	1c43      	adds	r3, r0, #1
 80009da:	d102      	bne.n	80009e2 <_read_r+0x1e>
 80009dc:	682b      	ldr	r3, [r5, #0]
 80009de:	b103      	cbz	r3, 80009e2 <_read_r+0x1e>
 80009e0:	6023      	str	r3, [r4, #0]
 80009e2:	bd38      	pop	{r3, r4, r5, pc}
 80009e4:	20000200 	.word	0x20000200

080009e8 <_write_r>:
 80009e8:	b538      	push	{r3, r4, r5, lr}
 80009ea:	4d07      	ldr	r5, [pc, #28]	@ (8000a08 <_write_r+0x20>)
 80009ec:	4604      	mov	r4, r0
 80009ee:	4608      	mov	r0, r1
 80009f0:	4611      	mov	r1, r2
 80009f2:	2200      	movs	r2, #0
 80009f4:	602a      	str	r2, [r5, #0]
 80009f6:	461a      	mov	r2, r3
 80009f8:	f7ff fdac 	bl	8000554 <_write>
 80009fc:	1c43      	adds	r3, r0, #1
 80009fe:	d102      	bne.n	8000a06 <_write_r+0x1e>
 8000a00:	682b      	ldr	r3, [r5, #0]
 8000a02:	b103      	cbz	r3, 8000a06 <_write_r+0x1e>
 8000a04:	6023      	str	r3, [r4, #0]
 8000a06:	bd38      	pop	{r3, r4, r5, pc}
 8000a08:	20000200 	.word	0x20000200

08000a0c <__errno>:
 8000a0c:	4b01      	ldr	r3, [pc, #4]	@ (8000a14 <__errno+0x8>)
 8000a0e:	6818      	ldr	r0, [r3, #0]
 8000a10:	4770      	bx	lr
 8000a12:	bf00      	nop
 8000a14:	20000054 	.word	0x20000054

08000a18 <__libc_init_array>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	4d0d      	ldr	r5, [pc, #52]	@ (8000a50 <__libc_init_array+0x38>)
 8000a1c:	4c0d      	ldr	r4, [pc, #52]	@ (8000a54 <__libc_init_array+0x3c>)
 8000a1e:	1b64      	subs	r4, r4, r5
 8000a20:	10a4      	asrs	r4, r4, #2
 8000a22:	2600      	movs	r6, #0
 8000a24:	42a6      	cmp	r6, r4
 8000a26:	d109      	bne.n	8000a3c <__libc_init_array+0x24>
 8000a28:	4d0b      	ldr	r5, [pc, #44]	@ (8000a58 <__libc_init_array+0x40>)
 8000a2a:	4c0c      	ldr	r4, [pc, #48]	@ (8000a5c <__libc_init_array+0x44>)
 8000a2c:	f000 fe70 	bl	8001710 <_init>
 8000a30:	1b64      	subs	r4, r4, r5
 8000a32:	10a4      	asrs	r4, r4, #2
 8000a34:	2600      	movs	r6, #0
 8000a36:	42a6      	cmp	r6, r4
 8000a38:	d105      	bne.n	8000a46 <__libc_init_array+0x2e>
 8000a3a:	bd70      	pop	{r4, r5, r6, pc}
 8000a3c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a40:	4798      	blx	r3
 8000a42:	3601      	adds	r6, #1
 8000a44:	e7ee      	b.n	8000a24 <__libc_init_array+0xc>
 8000a46:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4a:	4798      	blx	r3
 8000a4c:	3601      	adds	r6, #1
 8000a4e:	e7f2      	b.n	8000a36 <__libc_init_array+0x1e>
 8000a50:	0800186c 	.word	0x0800186c
 8000a54:	0800186c 	.word	0x0800186c
 8000a58:	0800186c 	.word	0x0800186c
 8000a5c:	08001870 	.word	0x08001870

08000a60 <__retarget_lock_init_recursive>:
 8000a60:	4770      	bx	lr

08000a62 <__retarget_lock_acquire_recursive>:
 8000a62:	4770      	bx	lr

08000a64 <__retarget_lock_release_recursive>:
 8000a64:	4770      	bx	lr
	...

08000a68 <__assert_func>:
 8000a68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000a6a:	4614      	mov	r4, r2
 8000a6c:	461a      	mov	r2, r3
 8000a6e:	4b09      	ldr	r3, [pc, #36]	@ (8000a94 <__assert_func+0x2c>)
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	4605      	mov	r5, r0
 8000a74:	68d8      	ldr	r0, [r3, #12]
 8000a76:	b954      	cbnz	r4, 8000a8e <__assert_func+0x26>
 8000a78:	4b07      	ldr	r3, [pc, #28]	@ (8000a98 <__assert_func+0x30>)
 8000a7a:	461c      	mov	r4, r3
 8000a7c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000a80:	9100      	str	r1, [sp, #0]
 8000a82:	462b      	mov	r3, r5
 8000a84:	4905      	ldr	r1, [pc, #20]	@ (8000a9c <__assert_func+0x34>)
 8000a86:	f000 fc89 	bl	800139c <fiprintf>
 8000a8a:	f000 fd71 	bl	8001570 <abort>
 8000a8e:	4b04      	ldr	r3, [pc, #16]	@ (8000aa0 <__assert_func+0x38>)
 8000a90:	e7f4      	b.n	8000a7c <__assert_func+0x14>
 8000a92:	bf00      	nop
 8000a94:	20000054 	.word	0x20000054
 8000a98:	0800182d 	.word	0x0800182d
 8000a9c:	080017ff 	.word	0x080017ff
 8000aa0:	080017f2 	.word	0x080017f2

08000aa4 <_free_r>:
 8000aa4:	b538      	push	{r3, r4, r5, lr}
 8000aa6:	4605      	mov	r5, r0
 8000aa8:	2900      	cmp	r1, #0
 8000aaa:	d041      	beq.n	8000b30 <_free_r+0x8c>
 8000aac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ab0:	1f0c      	subs	r4, r1, #4
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	bfb8      	it	lt
 8000ab6:	18e4      	addlt	r4, r4, r3
 8000ab8:	f000 f8e8 	bl	8000c8c <__malloc_lock>
 8000abc:	4a1d      	ldr	r2, [pc, #116]	@ (8000b34 <_free_r+0x90>)
 8000abe:	6813      	ldr	r3, [r2, #0]
 8000ac0:	b933      	cbnz	r3, 8000ad0 <_free_r+0x2c>
 8000ac2:	6063      	str	r3, [r4, #4]
 8000ac4:	6014      	str	r4, [r2, #0]
 8000ac6:	4628      	mov	r0, r5
 8000ac8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000acc:	f000 b8e4 	b.w	8000c98 <__malloc_unlock>
 8000ad0:	42a3      	cmp	r3, r4
 8000ad2:	d908      	bls.n	8000ae6 <_free_r+0x42>
 8000ad4:	6820      	ldr	r0, [r4, #0]
 8000ad6:	1821      	adds	r1, r4, r0
 8000ad8:	428b      	cmp	r3, r1
 8000ada:	bf01      	itttt	eq
 8000adc:	6819      	ldreq	r1, [r3, #0]
 8000ade:	685b      	ldreq	r3, [r3, #4]
 8000ae0:	1809      	addeq	r1, r1, r0
 8000ae2:	6021      	streq	r1, [r4, #0]
 8000ae4:	e7ed      	b.n	8000ac2 <_free_r+0x1e>
 8000ae6:	461a      	mov	r2, r3
 8000ae8:	685b      	ldr	r3, [r3, #4]
 8000aea:	b10b      	cbz	r3, 8000af0 <_free_r+0x4c>
 8000aec:	42a3      	cmp	r3, r4
 8000aee:	d9fa      	bls.n	8000ae6 <_free_r+0x42>
 8000af0:	6811      	ldr	r1, [r2, #0]
 8000af2:	1850      	adds	r0, r2, r1
 8000af4:	42a0      	cmp	r0, r4
 8000af6:	d10b      	bne.n	8000b10 <_free_r+0x6c>
 8000af8:	6820      	ldr	r0, [r4, #0]
 8000afa:	4401      	add	r1, r0
 8000afc:	1850      	adds	r0, r2, r1
 8000afe:	4283      	cmp	r3, r0
 8000b00:	6011      	str	r1, [r2, #0]
 8000b02:	d1e0      	bne.n	8000ac6 <_free_r+0x22>
 8000b04:	6818      	ldr	r0, [r3, #0]
 8000b06:	685b      	ldr	r3, [r3, #4]
 8000b08:	6053      	str	r3, [r2, #4]
 8000b0a:	4408      	add	r0, r1
 8000b0c:	6010      	str	r0, [r2, #0]
 8000b0e:	e7da      	b.n	8000ac6 <_free_r+0x22>
 8000b10:	d902      	bls.n	8000b18 <_free_r+0x74>
 8000b12:	230c      	movs	r3, #12
 8000b14:	602b      	str	r3, [r5, #0]
 8000b16:	e7d6      	b.n	8000ac6 <_free_r+0x22>
 8000b18:	6820      	ldr	r0, [r4, #0]
 8000b1a:	1821      	adds	r1, r4, r0
 8000b1c:	428b      	cmp	r3, r1
 8000b1e:	bf04      	itt	eq
 8000b20:	6819      	ldreq	r1, [r3, #0]
 8000b22:	685b      	ldreq	r3, [r3, #4]
 8000b24:	6063      	str	r3, [r4, #4]
 8000b26:	bf04      	itt	eq
 8000b28:	1809      	addeq	r1, r1, r0
 8000b2a:	6021      	streq	r1, [r4, #0]
 8000b2c:	6054      	str	r4, [r2, #4]
 8000b2e:	e7ca      	b.n	8000ac6 <_free_r+0x22>
 8000b30:	bd38      	pop	{r3, r4, r5, pc}
 8000b32:	bf00      	nop
 8000b34:	2000020c 	.word	0x2000020c

08000b38 <malloc>:
 8000b38:	4b02      	ldr	r3, [pc, #8]	@ (8000b44 <malloc+0xc>)
 8000b3a:	4601      	mov	r1, r0
 8000b3c:	6818      	ldr	r0, [r3, #0]
 8000b3e:	f000 b825 	b.w	8000b8c <_malloc_r>
 8000b42:	bf00      	nop
 8000b44:	20000054 	.word	0x20000054

08000b48 <sbrk_aligned>:
 8000b48:	b570      	push	{r4, r5, r6, lr}
 8000b4a:	4e0f      	ldr	r6, [pc, #60]	@ (8000b88 <sbrk_aligned+0x40>)
 8000b4c:	460c      	mov	r4, r1
 8000b4e:	6831      	ldr	r1, [r6, #0]
 8000b50:	4605      	mov	r5, r0
 8000b52:	b911      	cbnz	r1, 8000b5a <sbrk_aligned+0x12>
 8000b54:	f000 fcfc 	bl	8001550 <_sbrk_r>
 8000b58:	6030      	str	r0, [r6, #0]
 8000b5a:	4621      	mov	r1, r4
 8000b5c:	4628      	mov	r0, r5
 8000b5e:	f000 fcf7 	bl	8001550 <_sbrk_r>
 8000b62:	1c43      	adds	r3, r0, #1
 8000b64:	d103      	bne.n	8000b6e <sbrk_aligned+0x26>
 8000b66:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000b6a:	4620      	mov	r0, r4
 8000b6c:	bd70      	pop	{r4, r5, r6, pc}
 8000b6e:	1cc4      	adds	r4, r0, #3
 8000b70:	f024 0403 	bic.w	r4, r4, #3
 8000b74:	42a0      	cmp	r0, r4
 8000b76:	d0f8      	beq.n	8000b6a <sbrk_aligned+0x22>
 8000b78:	1a21      	subs	r1, r4, r0
 8000b7a:	4628      	mov	r0, r5
 8000b7c:	f000 fce8 	bl	8001550 <_sbrk_r>
 8000b80:	3001      	adds	r0, #1
 8000b82:	d1f2      	bne.n	8000b6a <sbrk_aligned+0x22>
 8000b84:	e7ef      	b.n	8000b66 <sbrk_aligned+0x1e>
 8000b86:	bf00      	nop
 8000b88:	20000208 	.word	0x20000208

08000b8c <_malloc_r>:
 8000b8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b90:	1ccd      	adds	r5, r1, #3
 8000b92:	f025 0503 	bic.w	r5, r5, #3
 8000b96:	3508      	adds	r5, #8
 8000b98:	2d0c      	cmp	r5, #12
 8000b9a:	bf38      	it	cc
 8000b9c:	250c      	movcc	r5, #12
 8000b9e:	2d00      	cmp	r5, #0
 8000ba0:	4606      	mov	r6, r0
 8000ba2:	db01      	blt.n	8000ba8 <_malloc_r+0x1c>
 8000ba4:	42a9      	cmp	r1, r5
 8000ba6:	d904      	bls.n	8000bb2 <_malloc_r+0x26>
 8000ba8:	230c      	movs	r3, #12
 8000baa:	6033      	str	r3, [r6, #0]
 8000bac:	2000      	movs	r0, #0
 8000bae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bb2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c88 <_malloc_r+0xfc>
 8000bb6:	f000 f869 	bl	8000c8c <__malloc_lock>
 8000bba:	f8d8 3000 	ldr.w	r3, [r8]
 8000bbe:	461c      	mov	r4, r3
 8000bc0:	bb44      	cbnz	r4, 8000c14 <_malloc_r+0x88>
 8000bc2:	4629      	mov	r1, r5
 8000bc4:	4630      	mov	r0, r6
 8000bc6:	f7ff ffbf 	bl	8000b48 <sbrk_aligned>
 8000bca:	1c43      	adds	r3, r0, #1
 8000bcc:	4604      	mov	r4, r0
 8000bce:	d158      	bne.n	8000c82 <_malloc_r+0xf6>
 8000bd0:	f8d8 4000 	ldr.w	r4, [r8]
 8000bd4:	4627      	mov	r7, r4
 8000bd6:	2f00      	cmp	r7, #0
 8000bd8:	d143      	bne.n	8000c62 <_malloc_r+0xd6>
 8000bda:	2c00      	cmp	r4, #0
 8000bdc:	d04b      	beq.n	8000c76 <_malloc_r+0xea>
 8000bde:	6823      	ldr	r3, [r4, #0]
 8000be0:	4639      	mov	r1, r7
 8000be2:	4630      	mov	r0, r6
 8000be4:	eb04 0903 	add.w	r9, r4, r3
 8000be8:	f000 fcb2 	bl	8001550 <_sbrk_r>
 8000bec:	4581      	cmp	r9, r0
 8000bee:	d142      	bne.n	8000c76 <_malloc_r+0xea>
 8000bf0:	6821      	ldr	r1, [r4, #0]
 8000bf2:	1a6d      	subs	r5, r5, r1
 8000bf4:	4629      	mov	r1, r5
 8000bf6:	4630      	mov	r0, r6
 8000bf8:	f7ff ffa6 	bl	8000b48 <sbrk_aligned>
 8000bfc:	3001      	adds	r0, #1
 8000bfe:	d03a      	beq.n	8000c76 <_malloc_r+0xea>
 8000c00:	6823      	ldr	r3, [r4, #0]
 8000c02:	442b      	add	r3, r5
 8000c04:	6023      	str	r3, [r4, #0]
 8000c06:	f8d8 3000 	ldr.w	r3, [r8]
 8000c0a:	685a      	ldr	r2, [r3, #4]
 8000c0c:	bb62      	cbnz	r2, 8000c68 <_malloc_r+0xdc>
 8000c0e:	f8c8 7000 	str.w	r7, [r8]
 8000c12:	e00f      	b.n	8000c34 <_malloc_r+0xa8>
 8000c14:	6822      	ldr	r2, [r4, #0]
 8000c16:	1b52      	subs	r2, r2, r5
 8000c18:	d420      	bmi.n	8000c5c <_malloc_r+0xd0>
 8000c1a:	2a0b      	cmp	r2, #11
 8000c1c:	d917      	bls.n	8000c4e <_malloc_r+0xc2>
 8000c1e:	1961      	adds	r1, r4, r5
 8000c20:	42a3      	cmp	r3, r4
 8000c22:	6025      	str	r5, [r4, #0]
 8000c24:	bf18      	it	ne
 8000c26:	6059      	strne	r1, [r3, #4]
 8000c28:	6863      	ldr	r3, [r4, #4]
 8000c2a:	bf08      	it	eq
 8000c2c:	f8c8 1000 	streq.w	r1, [r8]
 8000c30:	5162      	str	r2, [r4, r5]
 8000c32:	604b      	str	r3, [r1, #4]
 8000c34:	4630      	mov	r0, r6
 8000c36:	f000 f82f 	bl	8000c98 <__malloc_unlock>
 8000c3a:	f104 000b 	add.w	r0, r4, #11
 8000c3e:	1d23      	adds	r3, r4, #4
 8000c40:	f020 0007 	bic.w	r0, r0, #7
 8000c44:	1ac2      	subs	r2, r0, r3
 8000c46:	bf1c      	itt	ne
 8000c48:	1a1b      	subne	r3, r3, r0
 8000c4a:	50a3      	strne	r3, [r4, r2]
 8000c4c:	e7af      	b.n	8000bae <_malloc_r+0x22>
 8000c4e:	6862      	ldr	r2, [r4, #4]
 8000c50:	42a3      	cmp	r3, r4
 8000c52:	bf0c      	ite	eq
 8000c54:	f8c8 2000 	streq.w	r2, [r8]
 8000c58:	605a      	strne	r2, [r3, #4]
 8000c5a:	e7eb      	b.n	8000c34 <_malloc_r+0xa8>
 8000c5c:	4623      	mov	r3, r4
 8000c5e:	6864      	ldr	r4, [r4, #4]
 8000c60:	e7ae      	b.n	8000bc0 <_malloc_r+0x34>
 8000c62:	463c      	mov	r4, r7
 8000c64:	687f      	ldr	r7, [r7, #4]
 8000c66:	e7b6      	b.n	8000bd6 <_malloc_r+0x4a>
 8000c68:	461a      	mov	r2, r3
 8000c6a:	685b      	ldr	r3, [r3, #4]
 8000c6c:	42a3      	cmp	r3, r4
 8000c6e:	d1fb      	bne.n	8000c68 <_malloc_r+0xdc>
 8000c70:	2300      	movs	r3, #0
 8000c72:	6053      	str	r3, [r2, #4]
 8000c74:	e7de      	b.n	8000c34 <_malloc_r+0xa8>
 8000c76:	230c      	movs	r3, #12
 8000c78:	6033      	str	r3, [r6, #0]
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	f000 f80c 	bl	8000c98 <__malloc_unlock>
 8000c80:	e794      	b.n	8000bac <_malloc_r+0x20>
 8000c82:	6005      	str	r5, [r0, #0]
 8000c84:	e7d6      	b.n	8000c34 <_malloc_r+0xa8>
 8000c86:	bf00      	nop
 8000c88:	2000020c 	.word	0x2000020c

08000c8c <__malloc_lock>:
 8000c8c:	4801      	ldr	r0, [pc, #4]	@ (8000c94 <__malloc_lock+0x8>)
 8000c8e:	f7ff bee8 	b.w	8000a62 <__retarget_lock_acquire_recursive>
 8000c92:	bf00      	nop
 8000c94:	20000204 	.word	0x20000204

08000c98 <__malloc_unlock>:
 8000c98:	4801      	ldr	r0, [pc, #4]	@ (8000ca0 <__malloc_unlock+0x8>)
 8000c9a:	f7ff bee3 	b.w	8000a64 <__retarget_lock_release_recursive>
 8000c9e:	bf00      	nop
 8000ca0:	20000204 	.word	0x20000204

08000ca4 <__sfputc_r>:
 8000ca4:	6893      	ldr	r3, [r2, #8]
 8000ca6:	3b01      	subs	r3, #1
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	b410      	push	{r4}
 8000cac:	6093      	str	r3, [r2, #8]
 8000cae:	da08      	bge.n	8000cc2 <__sfputc_r+0x1e>
 8000cb0:	6994      	ldr	r4, [r2, #24]
 8000cb2:	42a3      	cmp	r3, r4
 8000cb4:	db01      	blt.n	8000cba <__sfputc_r+0x16>
 8000cb6:	290a      	cmp	r1, #10
 8000cb8:	d103      	bne.n	8000cc2 <__sfputc_r+0x1e>
 8000cba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cbe:	f000 bbb3 	b.w	8001428 <__swbuf_r>
 8000cc2:	6813      	ldr	r3, [r2, #0]
 8000cc4:	1c58      	adds	r0, r3, #1
 8000cc6:	6010      	str	r0, [r2, #0]
 8000cc8:	7019      	strb	r1, [r3, #0]
 8000cca:	4608      	mov	r0, r1
 8000ccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cd0:	4770      	bx	lr

08000cd2 <__sfputs_r>:
 8000cd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd4:	4606      	mov	r6, r0
 8000cd6:	460f      	mov	r7, r1
 8000cd8:	4614      	mov	r4, r2
 8000cda:	18d5      	adds	r5, r2, r3
 8000cdc:	42ac      	cmp	r4, r5
 8000cde:	d101      	bne.n	8000ce4 <__sfputs_r+0x12>
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	e007      	b.n	8000cf4 <__sfputs_r+0x22>
 8000ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ce8:	463a      	mov	r2, r7
 8000cea:	4630      	mov	r0, r6
 8000cec:	f7ff ffda 	bl	8000ca4 <__sfputc_r>
 8000cf0:	1c43      	adds	r3, r0, #1
 8000cf2:	d1f3      	bne.n	8000cdc <__sfputs_r+0xa>
 8000cf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cf8 <_vfiprintf_r>:
 8000cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cfc:	460d      	mov	r5, r1
 8000cfe:	b09d      	sub	sp, #116	@ 0x74
 8000d00:	4614      	mov	r4, r2
 8000d02:	4698      	mov	r8, r3
 8000d04:	4606      	mov	r6, r0
 8000d06:	b118      	cbz	r0, 8000d10 <_vfiprintf_r+0x18>
 8000d08:	6a03      	ldr	r3, [r0, #32]
 8000d0a:	b90b      	cbnz	r3, 8000d10 <_vfiprintf_r+0x18>
 8000d0c:	f7ff fd9c 	bl	8000848 <__sinit>
 8000d10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d12:	07d9      	lsls	r1, r3, #31
 8000d14:	d405      	bmi.n	8000d22 <_vfiprintf_r+0x2a>
 8000d16:	89ab      	ldrh	r3, [r5, #12]
 8000d18:	059a      	lsls	r2, r3, #22
 8000d1a:	d402      	bmi.n	8000d22 <_vfiprintf_r+0x2a>
 8000d1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d1e:	f7ff fea0 	bl	8000a62 <__retarget_lock_acquire_recursive>
 8000d22:	89ab      	ldrh	r3, [r5, #12]
 8000d24:	071b      	lsls	r3, r3, #28
 8000d26:	d501      	bpl.n	8000d2c <_vfiprintf_r+0x34>
 8000d28:	692b      	ldr	r3, [r5, #16]
 8000d2a:	b99b      	cbnz	r3, 8000d54 <_vfiprintf_r+0x5c>
 8000d2c:	4629      	mov	r1, r5
 8000d2e:	4630      	mov	r0, r6
 8000d30:	f000 fbb8 	bl	80014a4 <__swsetup_r>
 8000d34:	b170      	cbz	r0, 8000d54 <_vfiprintf_r+0x5c>
 8000d36:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d38:	07dc      	lsls	r4, r3, #31
 8000d3a:	d504      	bpl.n	8000d46 <_vfiprintf_r+0x4e>
 8000d3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d40:	b01d      	add	sp, #116	@ 0x74
 8000d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d46:	89ab      	ldrh	r3, [r5, #12]
 8000d48:	0598      	lsls	r0, r3, #22
 8000d4a:	d4f7      	bmi.n	8000d3c <_vfiprintf_r+0x44>
 8000d4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d4e:	f7ff fe89 	bl	8000a64 <__retarget_lock_release_recursive>
 8000d52:	e7f3      	b.n	8000d3c <_vfiprintf_r+0x44>
 8000d54:	2300      	movs	r3, #0
 8000d56:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d58:	2320      	movs	r3, #32
 8000d5a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d5e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d62:	2330      	movs	r3, #48	@ 0x30
 8000d64:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000f14 <_vfiprintf_r+0x21c>
 8000d68:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d6c:	f04f 0901 	mov.w	r9, #1
 8000d70:	4623      	mov	r3, r4
 8000d72:	469a      	mov	sl, r3
 8000d74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d78:	b10a      	cbz	r2, 8000d7e <_vfiprintf_r+0x86>
 8000d7a:	2a25      	cmp	r2, #37	@ 0x25
 8000d7c:	d1f9      	bne.n	8000d72 <_vfiprintf_r+0x7a>
 8000d7e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d82:	d00b      	beq.n	8000d9c <_vfiprintf_r+0xa4>
 8000d84:	465b      	mov	r3, fp
 8000d86:	4622      	mov	r2, r4
 8000d88:	4629      	mov	r1, r5
 8000d8a:	4630      	mov	r0, r6
 8000d8c:	f7ff ffa1 	bl	8000cd2 <__sfputs_r>
 8000d90:	3001      	adds	r0, #1
 8000d92:	f000 80a7 	beq.w	8000ee4 <_vfiprintf_r+0x1ec>
 8000d96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d98:	445a      	add	r2, fp
 8000d9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	f000 809f 	beq.w	8000ee4 <_vfiprintf_r+0x1ec>
 8000da6:	2300      	movs	r3, #0
 8000da8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000dac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000db0:	f10a 0a01 	add.w	sl, sl, #1
 8000db4:	9304      	str	r3, [sp, #16]
 8000db6:	9307      	str	r3, [sp, #28]
 8000db8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000dbc:	931a      	str	r3, [sp, #104]	@ 0x68
 8000dbe:	4654      	mov	r4, sl
 8000dc0:	2205      	movs	r2, #5
 8000dc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dc6:	4853      	ldr	r0, [pc, #332]	@ (8000f14 <_vfiprintf_r+0x21c>)
 8000dc8:	f7ff fa0a 	bl	80001e0 <memchr>
 8000dcc:	9a04      	ldr	r2, [sp, #16]
 8000dce:	b9d8      	cbnz	r0, 8000e08 <_vfiprintf_r+0x110>
 8000dd0:	06d1      	lsls	r1, r2, #27
 8000dd2:	bf44      	itt	mi
 8000dd4:	2320      	movmi	r3, #32
 8000dd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000dda:	0713      	lsls	r3, r2, #28
 8000ddc:	bf44      	itt	mi
 8000dde:	232b      	movmi	r3, #43	@ 0x2b
 8000de0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000de4:	f89a 3000 	ldrb.w	r3, [sl]
 8000de8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dea:	d015      	beq.n	8000e18 <_vfiprintf_r+0x120>
 8000dec:	9a07      	ldr	r2, [sp, #28]
 8000dee:	4654      	mov	r4, sl
 8000df0:	2000      	movs	r0, #0
 8000df2:	f04f 0c0a 	mov.w	ip, #10
 8000df6:	4621      	mov	r1, r4
 8000df8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dfc:	3b30      	subs	r3, #48	@ 0x30
 8000dfe:	2b09      	cmp	r3, #9
 8000e00:	d94b      	bls.n	8000e9a <_vfiprintf_r+0x1a2>
 8000e02:	b1b0      	cbz	r0, 8000e32 <_vfiprintf_r+0x13a>
 8000e04:	9207      	str	r2, [sp, #28]
 8000e06:	e014      	b.n	8000e32 <_vfiprintf_r+0x13a>
 8000e08:	eba0 0308 	sub.w	r3, r0, r8
 8000e0c:	fa09 f303 	lsl.w	r3, r9, r3
 8000e10:	4313      	orrs	r3, r2
 8000e12:	9304      	str	r3, [sp, #16]
 8000e14:	46a2      	mov	sl, r4
 8000e16:	e7d2      	b.n	8000dbe <_vfiprintf_r+0xc6>
 8000e18:	9b03      	ldr	r3, [sp, #12]
 8000e1a:	1d19      	adds	r1, r3, #4
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	9103      	str	r1, [sp, #12]
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	bfbb      	ittet	lt
 8000e24:	425b      	neglt	r3, r3
 8000e26:	f042 0202 	orrlt.w	r2, r2, #2
 8000e2a:	9307      	strge	r3, [sp, #28]
 8000e2c:	9307      	strlt	r3, [sp, #28]
 8000e2e:	bfb8      	it	lt
 8000e30:	9204      	strlt	r2, [sp, #16]
 8000e32:	7823      	ldrb	r3, [r4, #0]
 8000e34:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e36:	d10a      	bne.n	8000e4e <_vfiprintf_r+0x156>
 8000e38:	7863      	ldrb	r3, [r4, #1]
 8000e3a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e3c:	d132      	bne.n	8000ea4 <_vfiprintf_r+0x1ac>
 8000e3e:	9b03      	ldr	r3, [sp, #12]
 8000e40:	1d1a      	adds	r2, r3, #4
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	9203      	str	r2, [sp, #12]
 8000e46:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e4a:	3402      	adds	r4, #2
 8000e4c:	9305      	str	r3, [sp, #20]
 8000e4e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000f24 <_vfiprintf_r+0x22c>
 8000e52:	7821      	ldrb	r1, [r4, #0]
 8000e54:	2203      	movs	r2, #3
 8000e56:	4650      	mov	r0, sl
 8000e58:	f7ff f9c2 	bl	80001e0 <memchr>
 8000e5c:	b138      	cbz	r0, 8000e6e <_vfiprintf_r+0x176>
 8000e5e:	9b04      	ldr	r3, [sp, #16]
 8000e60:	eba0 000a 	sub.w	r0, r0, sl
 8000e64:	2240      	movs	r2, #64	@ 0x40
 8000e66:	4082      	lsls	r2, r0
 8000e68:	4313      	orrs	r3, r2
 8000e6a:	3401      	adds	r4, #1
 8000e6c:	9304      	str	r3, [sp, #16]
 8000e6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e72:	4829      	ldr	r0, [pc, #164]	@ (8000f18 <_vfiprintf_r+0x220>)
 8000e74:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e78:	2206      	movs	r2, #6
 8000e7a:	f7ff f9b1 	bl	80001e0 <memchr>
 8000e7e:	2800      	cmp	r0, #0
 8000e80:	d03f      	beq.n	8000f02 <_vfiprintf_r+0x20a>
 8000e82:	4b26      	ldr	r3, [pc, #152]	@ (8000f1c <_vfiprintf_r+0x224>)
 8000e84:	bb1b      	cbnz	r3, 8000ece <_vfiprintf_r+0x1d6>
 8000e86:	9b03      	ldr	r3, [sp, #12]
 8000e88:	3307      	adds	r3, #7
 8000e8a:	f023 0307 	bic.w	r3, r3, #7
 8000e8e:	3308      	adds	r3, #8
 8000e90:	9303      	str	r3, [sp, #12]
 8000e92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e94:	443b      	add	r3, r7
 8000e96:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e98:	e76a      	b.n	8000d70 <_vfiprintf_r+0x78>
 8000e9a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e9e:	460c      	mov	r4, r1
 8000ea0:	2001      	movs	r0, #1
 8000ea2:	e7a8      	b.n	8000df6 <_vfiprintf_r+0xfe>
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	3401      	adds	r4, #1
 8000ea8:	9305      	str	r3, [sp, #20]
 8000eaa:	4619      	mov	r1, r3
 8000eac:	f04f 0c0a 	mov.w	ip, #10
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000eb6:	3a30      	subs	r2, #48	@ 0x30
 8000eb8:	2a09      	cmp	r2, #9
 8000eba:	d903      	bls.n	8000ec4 <_vfiprintf_r+0x1cc>
 8000ebc:	2b00      	cmp	r3, #0
 8000ebe:	d0c6      	beq.n	8000e4e <_vfiprintf_r+0x156>
 8000ec0:	9105      	str	r1, [sp, #20]
 8000ec2:	e7c4      	b.n	8000e4e <_vfiprintf_r+0x156>
 8000ec4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ec8:	4604      	mov	r4, r0
 8000eca:	2301      	movs	r3, #1
 8000ecc:	e7f0      	b.n	8000eb0 <_vfiprintf_r+0x1b8>
 8000ece:	ab03      	add	r3, sp, #12
 8000ed0:	9300      	str	r3, [sp, #0]
 8000ed2:	462a      	mov	r2, r5
 8000ed4:	4b12      	ldr	r3, [pc, #72]	@ (8000f20 <_vfiprintf_r+0x228>)
 8000ed6:	a904      	add	r1, sp, #16
 8000ed8:	4630      	mov	r0, r6
 8000eda:	f3af 8000 	nop.w
 8000ede:	4607      	mov	r7, r0
 8000ee0:	1c78      	adds	r0, r7, #1
 8000ee2:	d1d6      	bne.n	8000e92 <_vfiprintf_r+0x19a>
 8000ee4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ee6:	07d9      	lsls	r1, r3, #31
 8000ee8:	d405      	bmi.n	8000ef6 <_vfiprintf_r+0x1fe>
 8000eea:	89ab      	ldrh	r3, [r5, #12]
 8000eec:	059a      	lsls	r2, r3, #22
 8000eee:	d402      	bmi.n	8000ef6 <_vfiprintf_r+0x1fe>
 8000ef0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ef2:	f7ff fdb7 	bl	8000a64 <__retarget_lock_release_recursive>
 8000ef6:	89ab      	ldrh	r3, [r5, #12]
 8000ef8:	065b      	lsls	r3, r3, #25
 8000efa:	f53f af1f 	bmi.w	8000d3c <_vfiprintf_r+0x44>
 8000efe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000f00:	e71e      	b.n	8000d40 <_vfiprintf_r+0x48>
 8000f02:	ab03      	add	r3, sp, #12
 8000f04:	9300      	str	r3, [sp, #0]
 8000f06:	462a      	mov	r2, r5
 8000f08:	4b05      	ldr	r3, [pc, #20]	@ (8000f20 <_vfiprintf_r+0x228>)
 8000f0a:	a904      	add	r1, sp, #16
 8000f0c:	4630      	mov	r0, r6
 8000f0e:	f000 f879 	bl	8001004 <_printf_i>
 8000f12:	e7e4      	b.n	8000ede <_vfiprintf_r+0x1e6>
 8000f14:	0800182e 	.word	0x0800182e
 8000f18:	08001838 	.word	0x08001838
 8000f1c:	00000000 	.word	0x00000000
 8000f20:	08000cd3 	.word	0x08000cd3
 8000f24:	08001834 	.word	0x08001834

08000f28 <_printf_common>:
 8000f28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f2c:	4616      	mov	r6, r2
 8000f2e:	4698      	mov	r8, r3
 8000f30:	688a      	ldr	r2, [r1, #8]
 8000f32:	690b      	ldr	r3, [r1, #16]
 8000f34:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000f38:	4293      	cmp	r3, r2
 8000f3a:	bfb8      	it	lt
 8000f3c:	4613      	movlt	r3, r2
 8000f3e:	6033      	str	r3, [r6, #0]
 8000f40:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f44:	4607      	mov	r7, r0
 8000f46:	460c      	mov	r4, r1
 8000f48:	b10a      	cbz	r2, 8000f4e <_printf_common+0x26>
 8000f4a:	3301      	adds	r3, #1
 8000f4c:	6033      	str	r3, [r6, #0]
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	0699      	lsls	r1, r3, #26
 8000f52:	bf42      	ittt	mi
 8000f54:	6833      	ldrmi	r3, [r6, #0]
 8000f56:	3302      	addmi	r3, #2
 8000f58:	6033      	strmi	r3, [r6, #0]
 8000f5a:	6825      	ldr	r5, [r4, #0]
 8000f5c:	f015 0506 	ands.w	r5, r5, #6
 8000f60:	d106      	bne.n	8000f70 <_printf_common+0x48>
 8000f62:	f104 0a19 	add.w	sl, r4, #25
 8000f66:	68e3      	ldr	r3, [r4, #12]
 8000f68:	6832      	ldr	r2, [r6, #0]
 8000f6a:	1a9b      	subs	r3, r3, r2
 8000f6c:	42ab      	cmp	r3, r5
 8000f6e:	dc26      	bgt.n	8000fbe <_printf_common+0x96>
 8000f70:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f74:	6822      	ldr	r2, [r4, #0]
 8000f76:	3b00      	subs	r3, #0
 8000f78:	bf18      	it	ne
 8000f7a:	2301      	movne	r3, #1
 8000f7c:	0692      	lsls	r2, r2, #26
 8000f7e:	d42b      	bmi.n	8000fd8 <_printf_common+0xb0>
 8000f80:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f84:	4641      	mov	r1, r8
 8000f86:	4638      	mov	r0, r7
 8000f88:	47c8      	blx	r9
 8000f8a:	3001      	adds	r0, #1
 8000f8c:	d01e      	beq.n	8000fcc <_printf_common+0xa4>
 8000f8e:	6823      	ldr	r3, [r4, #0]
 8000f90:	6922      	ldr	r2, [r4, #16]
 8000f92:	f003 0306 	and.w	r3, r3, #6
 8000f96:	2b04      	cmp	r3, #4
 8000f98:	bf02      	ittt	eq
 8000f9a:	68e5      	ldreq	r5, [r4, #12]
 8000f9c:	6833      	ldreq	r3, [r6, #0]
 8000f9e:	1aed      	subeq	r5, r5, r3
 8000fa0:	68a3      	ldr	r3, [r4, #8]
 8000fa2:	bf0c      	ite	eq
 8000fa4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000fa8:	2500      	movne	r5, #0
 8000faa:	4293      	cmp	r3, r2
 8000fac:	bfc4      	itt	gt
 8000fae:	1a9b      	subgt	r3, r3, r2
 8000fb0:	18ed      	addgt	r5, r5, r3
 8000fb2:	2600      	movs	r6, #0
 8000fb4:	341a      	adds	r4, #26
 8000fb6:	42b5      	cmp	r5, r6
 8000fb8:	d11a      	bne.n	8000ff0 <_printf_common+0xc8>
 8000fba:	2000      	movs	r0, #0
 8000fbc:	e008      	b.n	8000fd0 <_printf_common+0xa8>
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	4652      	mov	r2, sl
 8000fc2:	4641      	mov	r1, r8
 8000fc4:	4638      	mov	r0, r7
 8000fc6:	47c8      	blx	r9
 8000fc8:	3001      	adds	r0, #1
 8000fca:	d103      	bne.n	8000fd4 <_printf_common+0xac>
 8000fcc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000fd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fd4:	3501      	adds	r5, #1
 8000fd6:	e7c6      	b.n	8000f66 <_printf_common+0x3e>
 8000fd8:	18e1      	adds	r1, r4, r3
 8000fda:	1c5a      	adds	r2, r3, #1
 8000fdc:	2030      	movs	r0, #48	@ 0x30
 8000fde:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000fe2:	4422      	add	r2, r4
 8000fe4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fe8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fec:	3302      	adds	r3, #2
 8000fee:	e7c7      	b.n	8000f80 <_printf_common+0x58>
 8000ff0:	2301      	movs	r3, #1
 8000ff2:	4622      	mov	r2, r4
 8000ff4:	4641      	mov	r1, r8
 8000ff6:	4638      	mov	r0, r7
 8000ff8:	47c8      	blx	r9
 8000ffa:	3001      	adds	r0, #1
 8000ffc:	d0e6      	beq.n	8000fcc <_printf_common+0xa4>
 8000ffe:	3601      	adds	r6, #1
 8001000:	e7d9      	b.n	8000fb6 <_printf_common+0x8e>
	...

08001004 <_printf_i>:
 8001004:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001008:	7e0f      	ldrb	r7, [r1, #24]
 800100a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800100c:	2f78      	cmp	r7, #120	@ 0x78
 800100e:	4691      	mov	r9, r2
 8001010:	4680      	mov	r8, r0
 8001012:	460c      	mov	r4, r1
 8001014:	469a      	mov	sl, r3
 8001016:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800101a:	d807      	bhi.n	800102c <_printf_i+0x28>
 800101c:	2f62      	cmp	r7, #98	@ 0x62
 800101e:	d80a      	bhi.n	8001036 <_printf_i+0x32>
 8001020:	2f00      	cmp	r7, #0
 8001022:	f000 80d2 	beq.w	80011ca <_printf_i+0x1c6>
 8001026:	2f58      	cmp	r7, #88	@ 0x58
 8001028:	f000 80b9 	beq.w	800119e <_printf_i+0x19a>
 800102c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001030:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001034:	e03a      	b.n	80010ac <_printf_i+0xa8>
 8001036:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800103a:	2b15      	cmp	r3, #21
 800103c:	d8f6      	bhi.n	800102c <_printf_i+0x28>
 800103e:	a101      	add	r1, pc, #4	@ (adr r1, 8001044 <_printf_i+0x40>)
 8001040:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001044:	0800109d 	.word	0x0800109d
 8001048:	080010b1 	.word	0x080010b1
 800104c:	0800102d 	.word	0x0800102d
 8001050:	0800102d 	.word	0x0800102d
 8001054:	0800102d 	.word	0x0800102d
 8001058:	0800102d 	.word	0x0800102d
 800105c:	080010b1 	.word	0x080010b1
 8001060:	0800102d 	.word	0x0800102d
 8001064:	0800102d 	.word	0x0800102d
 8001068:	0800102d 	.word	0x0800102d
 800106c:	0800102d 	.word	0x0800102d
 8001070:	080011b1 	.word	0x080011b1
 8001074:	080010db 	.word	0x080010db
 8001078:	0800116b 	.word	0x0800116b
 800107c:	0800102d 	.word	0x0800102d
 8001080:	0800102d 	.word	0x0800102d
 8001084:	080011d3 	.word	0x080011d3
 8001088:	0800102d 	.word	0x0800102d
 800108c:	080010db 	.word	0x080010db
 8001090:	0800102d 	.word	0x0800102d
 8001094:	0800102d 	.word	0x0800102d
 8001098:	08001173 	.word	0x08001173
 800109c:	6833      	ldr	r3, [r6, #0]
 800109e:	1d1a      	adds	r2, r3, #4
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	6032      	str	r2, [r6, #0]
 80010a4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80010a8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80010ac:	2301      	movs	r3, #1
 80010ae:	e09d      	b.n	80011ec <_printf_i+0x1e8>
 80010b0:	6833      	ldr	r3, [r6, #0]
 80010b2:	6820      	ldr	r0, [r4, #0]
 80010b4:	1d19      	adds	r1, r3, #4
 80010b6:	6031      	str	r1, [r6, #0]
 80010b8:	0606      	lsls	r6, r0, #24
 80010ba:	d501      	bpl.n	80010c0 <_printf_i+0xbc>
 80010bc:	681d      	ldr	r5, [r3, #0]
 80010be:	e003      	b.n	80010c8 <_printf_i+0xc4>
 80010c0:	0645      	lsls	r5, r0, #25
 80010c2:	d5fb      	bpl.n	80010bc <_printf_i+0xb8>
 80010c4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80010c8:	2d00      	cmp	r5, #0
 80010ca:	da03      	bge.n	80010d4 <_printf_i+0xd0>
 80010cc:	232d      	movs	r3, #45	@ 0x2d
 80010ce:	426d      	negs	r5, r5
 80010d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010d4:	4859      	ldr	r0, [pc, #356]	@ (800123c <_printf_i+0x238>)
 80010d6:	230a      	movs	r3, #10
 80010d8:	e011      	b.n	80010fe <_printf_i+0xfa>
 80010da:	6821      	ldr	r1, [r4, #0]
 80010dc:	6833      	ldr	r3, [r6, #0]
 80010de:	0608      	lsls	r0, r1, #24
 80010e0:	f853 5b04 	ldr.w	r5, [r3], #4
 80010e4:	d402      	bmi.n	80010ec <_printf_i+0xe8>
 80010e6:	0649      	lsls	r1, r1, #25
 80010e8:	bf48      	it	mi
 80010ea:	b2ad      	uxthmi	r5, r5
 80010ec:	2f6f      	cmp	r7, #111	@ 0x6f
 80010ee:	4853      	ldr	r0, [pc, #332]	@ (800123c <_printf_i+0x238>)
 80010f0:	6033      	str	r3, [r6, #0]
 80010f2:	bf14      	ite	ne
 80010f4:	230a      	movne	r3, #10
 80010f6:	2308      	moveq	r3, #8
 80010f8:	2100      	movs	r1, #0
 80010fa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010fe:	6866      	ldr	r6, [r4, #4]
 8001100:	60a6      	str	r6, [r4, #8]
 8001102:	2e00      	cmp	r6, #0
 8001104:	bfa2      	ittt	ge
 8001106:	6821      	ldrge	r1, [r4, #0]
 8001108:	f021 0104 	bicge.w	r1, r1, #4
 800110c:	6021      	strge	r1, [r4, #0]
 800110e:	b90d      	cbnz	r5, 8001114 <_printf_i+0x110>
 8001110:	2e00      	cmp	r6, #0
 8001112:	d04b      	beq.n	80011ac <_printf_i+0x1a8>
 8001114:	4616      	mov	r6, r2
 8001116:	fbb5 f1f3 	udiv	r1, r5, r3
 800111a:	fb03 5711 	mls	r7, r3, r1, r5
 800111e:	5dc7      	ldrb	r7, [r0, r7]
 8001120:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001124:	462f      	mov	r7, r5
 8001126:	42bb      	cmp	r3, r7
 8001128:	460d      	mov	r5, r1
 800112a:	d9f4      	bls.n	8001116 <_printf_i+0x112>
 800112c:	2b08      	cmp	r3, #8
 800112e:	d10b      	bne.n	8001148 <_printf_i+0x144>
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	07df      	lsls	r7, r3, #31
 8001134:	d508      	bpl.n	8001148 <_printf_i+0x144>
 8001136:	6923      	ldr	r3, [r4, #16]
 8001138:	6861      	ldr	r1, [r4, #4]
 800113a:	4299      	cmp	r1, r3
 800113c:	bfde      	ittt	le
 800113e:	2330      	movle	r3, #48	@ 0x30
 8001140:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001144:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001148:	1b92      	subs	r2, r2, r6
 800114a:	6122      	str	r2, [r4, #16]
 800114c:	f8cd a000 	str.w	sl, [sp]
 8001150:	464b      	mov	r3, r9
 8001152:	aa03      	add	r2, sp, #12
 8001154:	4621      	mov	r1, r4
 8001156:	4640      	mov	r0, r8
 8001158:	f7ff fee6 	bl	8000f28 <_printf_common>
 800115c:	3001      	adds	r0, #1
 800115e:	d14a      	bne.n	80011f6 <_printf_i+0x1f2>
 8001160:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001164:	b004      	add	sp, #16
 8001166:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800116a:	6823      	ldr	r3, [r4, #0]
 800116c:	f043 0320 	orr.w	r3, r3, #32
 8001170:	6023      	str	r3, [r4, #0]
 8001172:	4833      	ldr	r0, [pc, #204]	@ (8001240 <_printf_i+0x23c>)
 8001174:	2778      	movs	r7, #120	@ 0x78
 8001176:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800117a:	6823      	ldr	r3, [r4, #0]
 800117c:	6831      	ldr	r1, [r6, #0]
 800117e:	061f      	lsls	r7, r3, #24
 8001180:	f851 5b04 	ldr.w	r5, [r1], #4
 8001184:	d402      	bmi.n	800118c <_printf_i+0x188>
 8001186:	065f      	lsls	r7, r3, #25
 8001188:	bf48      	it	mi
 800118a:	b2ad      	uxthmi	r5, r5
 800118c:	6031      	str	r1, [r6, #0]
 800118e:	07d9      	lsls	r1, r3, #31
 8001190:	bf44      	itt	mi
 8001192:	f043 0320 	orrmi.w	r3, r3, #32
 8001196:	6023      	strmi	r3, [r4, #0]
 8001198:	b11d      	cbz	r5, 80011a2 <_printf_i+0x19e>
 800119a:	2310      	movs	r3, #16
 800119c:	e7ac      	b.n	80010f8 <_printf_i+0xf4>
 800119e:	4827      	ldr	r0, [pc, #156]	@ (800123c <_printf_i+0x238>)
 80011a0:	e7e9      	b.n	8001176 <_printf_i+0x172>
 80011a2:	6823      	ldr	r3, [r4, #0]
 80011a4:	f023 0320 	bic.w	r3, r3, #32
 80011a8:	6023      	str	r3, [r4, #0]
 80011aa:	e7f6      	b.n	800119a <_printf_i+0x196>
 80011ac:	4616      	mov	r6, r2
 80011ae:	e7bd      	b.n	800112c <_printf_i+0x128>
 80011b0:	6833      	ldr	r3, [r6, #0]
 80011b2:	6825      	ldr	r5, [r4, #0]
 80011b4:	6961      	ldr	r1, [r4, #20]
 80011b6:	1d18      	adds	r0, r3, #4
 80011b8:	6030      	str	r0, [r6, #0]
 80011ba:	062e      	lsls	r6, r5, #24
 80011bc:	681b      	ldr	r3, [r3, #0]
 80011be:	d501      	bpl.n	80011c4 <_printf_i+0x1c0>
 80011c0:	6019      	str	r1, [r3, #0]
 80011c2:	e002      	b.n	80011ca <_printf_i+0x1c6>
 80011c4:	0668      	lsls	r0, r5, #25
 80011c6:	d5fb      	bpl.n	80011c0 <_printf_i+0x1bc>
 80011c8:	8019      	strh	r1, [r3, #0]
 80011ca:	2300      	movs	r3, #0
 80011cc:	6123      	str	r3, [r4, #16]
 80011ce:	4616      	mov	r6, r2
 80011d0:	e7bc      	b.n	800114c <_printf_i+0x148>
 80011d2:	6833      	ldr	r3, [r6, #0]
 80011d4:	1d1a      	adds	r2, r3, #4
 80011d6:	6032      	str	r2, [r6, #0]
 80011d8:	681e      	ldr	r6, [r3, #0]
 80011da:	6862      	ldr	r2, [r4, #4]
 80011dc:	2100      	movs	r1, #0
 80011de:	4630      	mov	r0, r6
 80011e0:	f7fe fffe 	bl	80001e0 <memchr>
 80011e4:	b108      	cbz	r0, 80011ea <_printf_i+0x1e6>
 80011e6:	1b80      	subs	r0, r0, r6
 80011e8:	6060      	str	r0, [r4, #4]
 80011ea:	6863      	ldr	r3, [r4, #4]
 80011ec:	6123      	str	r3, [r4, #16]
 80011ee:	2300      	movs	r3, #0
 80011f0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011f4:	e7aa      	b.n	800114c <_printf_i+0x148>
 80011f6:	6923      	ldr	r3, [r4, #16]
 80011f8:	4632      	mov	r2, r6
 80011fa:	4649      	mov	r1, r9
 80011fc:	4640      	mov	r0, r8
 80011fe:	47d0      	blx	sl
 8001200:	3001      	adds	r0, #1
 8001202:	d0ad      	beq.n	8001160 <_printf_i+0x15c>
 8001204:	6823      	ldr	r3, [r4, #0]
 8001206:	079b      	lsls	r3, r3, #30
 8001208:	d413      	bmi.n	8001232 <_printf_i+0x22e>
 800120a:	68e0      	ldr	r0, [r4, #12]
 800120c:	9b03      	ldr	r3, [sp, #12]
 800120e:	4298      	cmp	r0, r3
 8001210:	bfb8      	it	lt
 8001212:	4618      	movlt	r0, r3
 8001214:	e7a6      	b.n	8001164 <_printf_i+0x160>
 8001216:	2301      	movs	r3, #1
 8001218:	4632      	mov	r2, r6
 800121a:	4649      	mov	r1, r9
 800121c:	4640      	mov	r0, r8
 800121e:	47d0      	blx	sl
 8001220:	3001      	adds	r0, #1
 8001222:	d09d      	beq.n	8001160 <_printf_i+0x15c>
 8001224:	3501      	adds	r5, #1
 8001226:	68e3      	ldr	r3, [r4, #12]
 8001228:	9903      	ldr	r1, [sp, #12]
 800122a:	1a5b      	subs	r3, r3, r1
 800122c:	42ab      	cmp	r3, r5
 800122e:	dcf2      	bgt.n	8001216 <_printf_i+0x212>
 8001230:	e7eb      	b.n	800120a <_printf_i+0x206>
 8001232:	2500      	movs	r5, #0
 8001234:	f104 0619 	add.w	r6, r4, #25
 8001238:	e7f5      	b.n	8001226 <_printf_i+0x222>
 800123a:	bf00      	nop
 800123c:	0800183f 	.word	0x0800183f
 8001240:	08001850 	.word	0x08001850

08001244 <__sflush_r>:
 8001244:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800124c:	0716      	lsls	r6, r2, #28
 800124e:	4605      	mov	r5, r0
 8001250:	460c      	mov	r4, r1
 8001252:	d454      	bmi.n	80012fe <__sflush_r+0xba>
 8001254:	684b      	ldr	r3, [r1, #4]
 8001256:	2b00      	cmp	r3, #0
 8001258:	dc02      	bgt.n	8001260 <__sflush_r+0x1c>
 800125a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800125c:	2b00      	cmp	r3, #0
 800125e:	dd48      	ble.n	80012f2 <__sflush_r+0xae>
 8001260:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001262:	2e00      	cmp	r6, #0
 8001264:	d045      	beq.n	80012f2 <__sflush_r+0xae>
 8001266:	2300      	movs	r3, #0
 8001268:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800126c:	682f      	ldr	r7, [r5, #0]
 800126e:	6a21      	ldr	r1, [r4, #32]
 8001270:	602b      	str	r3, [r5, #0]
 8001272:	d030      	beq.n	80012d6 <__sflush_r+0x92>
 8001274:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001276:	89a3      	ldrh	r3, [r4, #12]
 8001278:	0759      	lsls	r1, r3, #29
 800127a:	d505      	bpl.n	8001288 <__sflush_r+0x44>
 800127c:	6863      	ldr	r3, [r4, #4]
 800127e:	1ad2      	subs	r2, r2, r3
 8001280:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001282:	b10b      	cbz	r3, 8001288 <__sflush_r+0x44>
 8001284:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001286:	1ad2      	subs	r2, r2, r3
 8001288:	2300      	movs	r3, #0
 800128a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800128c:	6a21      	ldr	r1, [r4, #32]
 800128e:	4628      	mov	r0, r5
 8001290:	47b0      	blx	r6
 8001292:	1c43      	adds	r3, r0, #1
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	d106      	bne.n	80012a6 <__sflush_r+0x62>
 8001298:	6829      	ldr	r1, [r5, #0]
 800129a:	291d      	cmp	r1, #29
 800129c:	d82b      	bhi.n	80012f6 <__sflush_r+0xb2>
 800129e:	4a2a      	ldr	r2, [pc, #168]	@ (8001348 <__sflush_r+0x104>)
 80012a0:	410a      	asrs	r2, r1
 80012a2:	07d6      	lsls	r6, r2, #31
 80012a4:	d427      	bmi.n	80012f6 <__sflush_r+0xb2>
 80012a6:	2200      	movs	r2, #0
 80012a8:	6062      	str	r2, [r4, #4]
 80012aa:	04d9      	lsls	r1, r3, #19
 80012ac:	6922      	ldr	r2, [r4, #16]
 80012ae:	6022      	str	r2, [r4, #0]
 80012b0:	d504      	bpl.n	80012bc <__sflush_r+0x78>
 80012b2:	1c42      	adds	r2, r0, #1
 80012b4:	d101      	bne.n	80012ba <__sflush_r+0x76>
 80012b6:	682b      	ldr	r3, [r5, #0]
 80012b8:	b903      	cbnz	r3, 80012bc <__sflush_r+0x78>
 80012ba:	6560      	str	r0, [r4, #84]	@ 0x54
 80012bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80012be:	602f      	str	r7, [r5, #0]
 80012c0:	b1b9      	cbz	r1, 80012f2 <__sflush_r+0xae>
 80012c2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80012c6:	4299      	cmp	r1, r3
 80012c8:	d002      	beq.n	80012d0 <__sflush_r+0x8c>
 80012ca:	4628      	mov	r0, r5
 80012cc:	f7ff fbea 	bl	8000aa4 <_free_r>
 80012d0:	2300      	movs	r3, #0
 80012d2:	6363      	str	r3, [r4, #52]	@ 0x34
 80012d4:	e00d      	b.n	80012f2 <__sflush_r+0xae>
 80012d6:	2301      	movs	r3, #1
 80012d8:	4628      	mov	r0, r5
 80012da:	47b0      	blx	r6
 80012dc:	4602      	mov	r2, r0
 80012de:	1c50      	adds	r0, r2, #1
 80012e0:	d1c9      	bne.n	8001276 <__sflush_r+0x32>
 80012e2:	682b      	ldr	r3, [r5, #0]
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d0c6      	beq.n	8001276 <__sflush_r+0x32>
 80012e8:	2b1d      	cmp	r3, #29
 80012ea:	d001      	beq.n	80012f0 <__sflush_r+0xac>
 80012ec:	2b16      	cmp	r3, #22
 80012ee:	d11e      	bne.n	800132e <__sflush_r+0xea>
 80012f0:	602f      	str	r7, [r5, #0]
 80012f2:	2000      	movs	r0, #0
 80012f4:	e022      	b.n	800133c <__sflush_r+0xf8>
 80012f6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012fa:	b21b      	sxth	r3, r3
 80012fc:	e01b      	b.n	8001336 <__sflush_r+0xf2>
 80012fe:	690f      	ldr	r7, [r1, #16]
 8001300:	2f00      	cmp	r7, #0
 8001302:	d0f6      	beq.n	80012f2 <__sflush_r+0xae>
 8001304:	0793      	lsls	r3, r2, #30
 8001306:	680e      	ldr	r6, [r1, #0]
 8001308:	bf08      	it	eq
 800130a:	694b      	ldreq	r3, [r1, #20]
 800130c:	600f      	str	r7, [r1, #0]
 800130e:	bf18      	it	ne
 8001310:	2300      	movne	r3, #0
 8001312:	eba6 0807 	sub.w	r8, r6, r7
 8001316:	608b      	str	r3, [r1, #8]
 8001318:	f1b8 0f00 	cmp.w	r8, #0
 800131c:	dde9      	ble.n	80012f2 <__sflush_r+0xae>
 800131e:	6a21      	ldr	r1, [r4, #32]
 8001320:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001322:	4643      	mov	r3, r8
 8001324:	463a      	mov	r2, r7
 8001326:	4628      	mov	r0, r5
 8001328:	47b0      	blx	r6
 800132a:	2800      	cmp	r0, #0
 800132c:	dc08      	bgt.n	8001340 <__sflush_r+0xfc>
 800132e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001332:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001336:	81a3      	strh	r3, [r4, #12]
 8001338:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800133c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001340:	4407      	add	r7, r0
 8001342:	eba8 0800 	sub.w	r8, r8, r0
 8001346:	e7e7      	b.n	8001318 <__sflush_r+0xd4>
 8001348:	dfbffffe 	.word	0xdfbffffe

0800134c <_fflush_r>:
 800134c:	b538      	push	{r3, r4, r5, lr}
 800134e:	690b      	ldr	r3, [r1, #16]
 8001350:	4605      	mov	r5, r0
 8001352:	460c      	mov	r4, r1
 8001354:	b913      	cbnz	r3, 800135c <_fflush_r+0x10>
 8001356:	2500      	movs	r5, #0
 8001358:	4628      	mov	r0, r5
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	b118      	cbz	r0, 8001366 <_fflush_r+0x1a>
 800135e:	6a03      	ldr	r3, [r0, #32]
 8001360:	b90b      	cbnz	r3, 8001366 <_fflush_r+0x1a>
 8001362:	f7ff fa71 	bl	8000848 <__sinit>
 8001366:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800136a:	2b00      	cmp	r3, #0
 800136c:	d0f3      	beq.n	8001356 <_fflush_r+0xa>
 800136e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001370:	07d0      	lsls	r0, r2, #31
 8001372:	d404      	bmi.n	800137e <_fflush_r+0x32>
 8001374:	0599      	lsls	r1, r3, #22
 8001376:	d402      	bmi.n	800137e <_fflush_r+0x32>
 8001378:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800137a:	f7ff fb72 	bl	8000a62 <__retarget_lock_acquire_recursive>
 800137e:	4628      	mov	r0, r5
 8001380:	4621      	mov	r1, r4
 8001382:	f7ff ff5f 	bl	8001244 <__sflush_r>
 8001386:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001388:	07da      	lsls	r2, r3, #31
 800138a:	4605      	mov	r5, r0
 800138c:	d4e4      	bmi.n	8001358 <_fflush_r+0xc>
 800138e:	89a3      	ldrh	r3, [r4, #12]
 8001390:	059b      	lsls	r3, r3, #22
 8001392:	d4e1      	bmi.n	8001358 <_fflush_r+0xc>
 8001394:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001396:	f7ff fb65 	bl	8000a64 <__retarget_lock_release_recursive>
 800139a:	e7dd      	b.n	8001358 <_fflush_r+0xc>

0800139c <fiprintf>:
 800139c:	b40e      	push	{r1, r2, r3}
 800139e:	b503      	push	{r0, r1, lr}
 80013a0:	4601      	mov	r1, r0
 80013a2:	ab03      	add	r3, sp, #12
 80013a4:	4805      	ldr	r0, [pc, #20]	@ (80013bc <fiprintf+0x20>)
 80013a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80013aa:	6800      	ldr	r0, [r0, #0]
 80013ac:	9301      	str	r3, [sp, #4]
 80013ae:	f7ff fca3 	bl	8000cf8 <_vfiprintf_r>
 80013b2:	b002      	add	sp, #8
 80013b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80013b8:	b003      	add	sp, #12
 80013ba:	4770      	bx	lr
 80013bc:	20000054 	.word	0x20000054

080013c0 <_putc_r>:
 80013c0:	b570      	push	{r4, r5, r6, lr}
 80013c2:	460d      	mov	r5, r1
 80013c4:	4614      	mov	r4, r2
 80013c6:	4606      	mov	r6, r0
 80013c8:	b118      	cbz	r0, 80013d2 <_putc_r+0x12>
 80013ca:	6a03      	ldr	r3, [r0, #32]
 80013cc:	b90b      	cbnz	r3, 80013d2 <_putc_r+0x12>
 80013ce:	f7ff fa3b 	bl	8000848 <__sinit>
 80013d2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80013d4:	07d8      	lsls	r0, r3, #31
 80013d6:	d405      	bmi.n	80013e4 <_putc_r+0x24>
 80013d8:	89a3      	ldrh	r3, [r4, #12]
 80013da:	0599      	lsls	r1, r3, #22
 80013dc:	d402      	bmi.n	80013e4 <_putc_r+0x24>
 80013de:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013e0:	f7ff fb3f 	bl	8000a62 <__retarget_lock_acquire_recursive>
 80013e4:	68a3      	ldr	r3, [r4, #8]
 80013e6:	3b01      	subs	r3, #1
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	60a3      	str	r3, [r4, #8]
 80013ec:	da05      	bge.n	80013fa <_putc_r+0x3a>
 80013ee:	69a2      	ldr	r2, [r4, #24]
 80013f0:	4293      	cmp	r3, r2
 80013f2:	db12      	blt.n	800141a <_putc_r+0x5a>
 80013f4:	b2eb      	uxtb	r3, r5
 80013f6:	2b0a      	cmp	r3, #10
 80013f8:	d00f      	beq.n	800141a <_putc_r+0x5a>
 80013fa:	6823      	ldr	r3, [r4, #0]
 80013fc:	1c5a      	adds	r2, r3, #1
 80013fe:	6022      	str	r2, [r4, #0]
 8001400:	701d      	strb	r5, [r3, #0]
 8001402:	b2ed      	uxtb	r5, r5
 8001404:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001406:	07da      	lsls	r2, r3, #31
 8001408:	d405      	bmi.n	8001416 <_putc_r+0x56>
 800140a:	89a3      	ldrh	r3, [r4, #12]
 800140c:	059b      	lsls	r3, r3, #22
 800140e:	d402      	bmi.n	8001416 <_putc_r+0x56>
 8001410:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001412:	f7ff fb27 	bl	8000a64 <__retarget_lock_release_recursive>
 8001416:	4628      	mov	r0, r5
 8001418:	bd70      	pop	{r4, r5, r6, pc}
 800141a:	4629      	mov	r1, r5
 800141c:	4622      	mov	r2, r4
 800141e:	4630      	mov	r0, r6
 8001420:	f000 f802 	bl	8001428 <__swbuf_r>
 8001424:	4605      	mov	r5, r0
 8001426:	e7ed      	b.n	8001404 <_putc_r+0x44>

08001428 <__swbuf_r>:
 8001428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800142a:	460e      	mov	r6, r1
 800142c:	4614      	mov	r4, r2
 800142e:	4605      	mov	r5, r0
 8001430:	b118      	cbz	r0, 800143a <__swbuf_r+0x12>
 8001432:	6a03      	ldr	r3, [r0, #32]
 8001434:	b90b      	cbnz	r3, 800143a <__swbuf_r+0x12>
 8001436:	f7ff fa07 	bl	8000848 <__sinit>
 800143a:	69a3      	ldr	r3, [r4, #24]
 800143c:	60a3      	str	r3, [r4, #8]
 800143e:	89a3      	ldrh	r3, [r4, #12]
 8001440:	071a      	lsls	r2, r3, #28
 8001442:	d501      	bpl.n	8001448 <__swbuf_r+0x20>
 8001444:	6923      	ldr	r3, [r4, #16]
 8001446:	b943      	cbnz	r3, 800145a <__swbuf_r+0x32>
 8001448:	4621      	mov	r1, r4
 800144a:	4628      	mov	r0, r5
 800144c:	f000 f82a 	bl	80014a4 <__swsetup_r>
 8001450:	b118      	cbz	r0, 800145a <__swbuf_r+0x32>
 8001452:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8001456:	4638      	mov	r0, r7
 8001458:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800145a:	6823      	ldr	r3, [r4, #0]
 800145c:	6922      	ldr	r2, [r4, #16]
 800145e:	1a98      	subs	r0, r3, r2
 8001460:	6963      	ldr	r3, [r4, #20]
 8001462:	b2f6      	uxtb	r6, r6
 8001464:	4283      	cmp	r3, r0
 8001466:	4637      	mov	r7, r6
 8001468:	dc05      	bgt.n	8001476 <__swbuf_r+0x4e>
 800146a:	4621      	mov	r1, r4
 800146c:	4628      	mov	r0, r5
 800146e:	f7ff ff6d 	bl	800134c <_fflush_r>
 8001472:	2800      	cmp	r0, #0
 8001474:	d1ed      	bne.n	8001452 <__swbuf_r+0x2a>
 8001476:	68a3      	ldr	r3, [r4, #8]
 8001478:	3b01      	subs	r3, #1
 800147a:	60a3      	str	r3, [r4, #8]
 800147c:	6823      	ldr	r3, [r4, #0]
 800147e:	1c5a      	adds	r2, r3, #1
 8001480:	6022      	str	r2, [r4, #0]
 8001482:	701e      	strb	r6, [r3, #0]
 8001484:	6962      	ldr	r2, [r4, #20]
 8001486:	1c43      	adds	r3, r0, #1
 8001488:	429a      	cmp	r2, r3
 800148a:	d004      	beq.n	8001496 <__swbuf_r+0x6e>
 800148c:	89a3      	ldrh	r3, [r4, #12]
 800148e:	07db      	lsls	r3, r3, #31
 8001490:	d5e1      	bpl.n	8001456 <__swbuf_r+0x2e>
 8001492:	2e0a      	cmp	r6, #10
 8001494:	d1df      	bne.n	8001456 <__swbuf_r+0x2e>
 8001496:	4621      	mov	r1, r4
 8001498:	4628      	mov	r0, r5
 800149a:	f7ff ff57 	bl	800134c <_fflush_r>
 800149e:	2800      	cmp	r0, #0
 80014a0:	d0d9      	beq.n	8001456 <__swbuf_r+0x2e>
 80014a2:	e7d6      	b.n	8001452 <__swbuf_r+0x2a>

080014a4 <__swsetup_r>:
 80014a4:	b538      	push	{r3, r4, r5, lr}
 80014a6:	4b29      	ldr	r3, [pc, #164]	@ (800154c <__swsetup_r+0xa8>)
 80014a8:	4605      	mov	r5, r0
 80014aa:	6818      	ldr	r0, [r3, #0]
 80014ac:	460c      	mov	r4, r1
 80014ae:	b118      	cbz	r0, 80014b8 <__swsetup_r+0x14>
 80014b0:	6a03      	ldr	r3, [r0, #32]
 80014b2:	b90b      	cbnz	r3, 80014b8 <__swsetup_r+0x14>
 80014b4:	f7ff f9c8 	bl	8000848 <__sinit>
 80014b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014bc:	0719      	lsls	r1, r3, #28
 80014be:	d422      	bmi.n	8001506 <__swsetup_r+0x62>
 80014c0:	06da      	lsls	r2, r3, #27
 80014c2:	d407      	bmi.n	80014d4 <__swsetup_r+0x30>
 80014c4:	2209      	movs	r2, #9
 80014c6:	602a      	str	r2, [r5, #0]
 80014c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014cc:	81a3      	strh	r3, [r4, #12]
 80014ce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80014d2:	e033      	b.n	800153c <__swsetup_r+0x98>
 80014d4:	0758      	lsls	r0, r3, #29
 80014d6:	d512      	bpl.n	80014fe <__swsetup_r+0x5a>
 80014d8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80014da:	b141      	cbz	r1, 80014ee <__swsetup_r+0x4a>
 80014dc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80014e0:	4299      	cmp	r1, r3
 80014e2:	d002      	beq.n	80014ea <__swsetup_r+0x46>
 80014e4:	4628      	mov	r0, r5
 80014e6:	f7ff fadd 	bl	8000aa4 <_free_r>
 80014ea:	2300      	movs	r3, #0
 80014ec:	6363      	str	r3, [r4, #52]	@ 0x34
 80014ee:	89a3      	ldrh	r3, [r4, #12]
 80014f0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80014f4:	81a3      	strh	r3, [r4, #12]
 80014f6:	2300      	movs	r3, #0
 80014f8:	6063      	str	r3, [r4, #4]
 80014fa:	6923      	ldr	r3, [r4, #16]
 80014fc:	6023      	str	r3, [r4, #0]
 80014fe:	89a3      	ldrh	r3, [r4, #12]
 8001500:	f043 0308 	orr.w	r3, r3, #8
 8001504:	81a3      	strh	r3, [r4, #12]
 8001506:	6923      	ldr	r3, [r4, #16]
 8001508:	b94b      	cbnz	r3, 800151e <__swsetup_r+0x7a>
 800150a:	89a3      	ldrh	r3, [r4, #12]
 800150c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001510:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001514:	d003      	beq.n	800151e <__swsetup_r+0x7a>
 8001516:	4621      	mov	r1, r4
 8001518:	4628      	mov	r0, r5
 800151a:	f000 f856 	bl	80015ca <__smakebuf_r>
 800151e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001522:	f013 0201 	ands.w	r2, r3, #1
 8001526:	d00a      	beq.n	800153e <__swsetup_r+0x9a>
 8001528:	2200      	movs	r2, #0
 800152a:	60a2      	str	r2, [r4, #8]
 800152c:	6962      	ldr	r2, [r4, #20]
 800152e:	4252      	negs	r2, r2
 8001530:	61a2      	str	r2, [r4, #24]
 8001532:	6922      	ldr	r2, [r4, #16]
 8001534:	b942      	cbnz	r2, 8001548 <__swsetup_r+0xa4>
 8001536:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800153a:	d1c5      	bne.n	80014c8 <__swsetup_r+0x24>
 800153c:	bd38      	pop	{r3, r4, r5, pc}
 800153e:	0799      	lsls	r1, r3, #30
 8001540:	bf58      	it	pl
 8001542:	6962      	ldrpl	r2, [r4, #20]
 8001544:	60a2      	str	r2, [r4, #8]
 8001546:	e7f4      	b.n	8001532 <__swsetup_r+0x8e>
 8001548:	2000      	movs	r0, #0
 800154a:	e7f7      	b.n	800153c <__swsetup_r+0x98>
 800154c:	20000054 	.word	0x20000054

08001550 <_sbrk_r>:
 8001550:	b538      	push	{r3, r4, r5, lr}
 8001552:	4d06      	ldr	r5, [pc, #24]	@ (800156c <_sbrk_r+0x1c>)
 8001554:	2300      	movs	r3, #0
 8001556:	4604      	mov	r4, r0
 8001558:	4608      	mov	r0, r1
 800155a:	602b      	str	r3, [r5, #0]
 800155c:	f7ff f84a 	bl	80005f4 <_sbrk>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d102      	bne.n	800156a <_sbrk_r+0x1a>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	b103      	cbz	r3, 800156a <_sbrk_r+0x1a>
 8001568:	6023      	str	r3, [r4, #0]
 800156a:	bd38      	pop	{r3, r4, r5, pc}
 800156c:	20000200 	.word	0x20000200

08001570 <abort>:
 8001570:	b508      	push	{r3, lr}
 8001572:	2006      	movs	r0, #6
 8001574:	f000 f88e 	bl	8001694 <raise>
 8001578:	2001      	movs	r0, #1
 800157a:	f7fe ffc3 	bl	8000504 <_exit>

0800157e <__swhatbuf_r>:
 800157e:	b570      	push	{r4, r5, r6, lr}
 8001580:	460c      	mov	r4, r1
 8001582:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001586:	2900      	cmp	r1, #0
 8001588:	b096      	sub	sp, #88	@ 0x58
 800158a:	4615      	mov	r5, r2
 800158c:	461e      	mov	r6, r3
 800158e:	da0d      	bge.n	80015ac <__swhatbuf_r+0x2e>
 8001590:	89a3      	ldrh	r3, [r4, #12]
 8001592:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001596:	f04f 0100 	mov.w	r1, #0
 800159a:	bf14      	ite	ne
 800159c:	2340      	movne	r3, #64	@ 0x40
 800159e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80015a2:	2000      	movs	r0, #0
 80015a4:	6031      	str	r1, [r6, #0]
 80015a6:	602b      	str	r3, [r5, #0]
 80015a8:	b016      	add	sp, #88	@ 0x58
 80015aa:	bd70      	pop	{r4, r5, r6, pc}
 80015ac:	466a      	mov	r2, sp
 80015ae:	f000 f879 	bl	80016a4 <_fstat_r>
 80015b2:	2800      	cmp	r0, #0
 80015b4:	dbec      	blt.n	8001590 <__swhatbuf_r+0x12>
 80015b6:	9901      	ldr	r1, [sp, #4]
 80015b8:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80015bc:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80015c0:	4259      	negs	r1, r3
 80015c2:	4159      	adcs	r1, r3
 80015c4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80015c8:	e7eb      	b.n	80015a2 <__swhatbuf_r+0x24>

080015ca <__smakebuf_r>:
 80015ca:	898b      	ldrh	r3, [r1, #12]
 80015cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015ce:	079d      	lsls	r5, r3, #30
 80015d0:	4606      	mov	r6, r0
 80015d2:	460c      	mov	r4, r1
 80015d4:	d507      	bpl.n	80015e6 <__smakebuf_r+0x1c>
 80015d6:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80015da:	6023      	str	r3, [r4, #0]
 80015dc:	6123      	str	r3, [r4, #16]
 80015de:	2301      	movs	r3, #1
 80015e0:	6163      	str	r3, [r4, #20]
 80015e2:	b003      	add	sp, #12
 80015e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015e6:	ab01      	add	r3, sp, #4
 80015e8:	466a      	mov	r2, sp
 80015ea:	f7ff ffc8 	bl	800157e <__swhatbuf_r>
 80015ee:	9f00      	ldr	r7, [sp, #0]
 80015f0:	4605      	mov	r5, r0
 80015f2:	4639      	mov	r1, r7
 80015f4:	4630      	mov	r0, r6
 80015f6:	f7ff fac9 	bl	8000b8c <_malloc_r>
 80015fa:	b948      	cbnz	r0, 8001610 <__smakebuf_r+0x46>
 80015fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001600:	059a      	lsls	r2, r3, #22
 8001602:	d4ee      	bmi.n	80015e2 <__smakebuf_r+0x18>
 8001604:	f023 0303 	bic.w	r3, r3, #3
 8001608:	f043 0302 	orr.w	r3, r3, #2
 800160c:	81a3      	strh	r3, [r4, #12]
 800160e:	e7e2      	b.n	80015d6 <__smakebuf_r+0xc>
 8001610:	89a3      	ldrh	r3, [r4, #12]
 8001612:	6020      	str	r0, [r4, #0]
 8001614:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001618:	81a3      	strh	r3, [r4, #12]
 800161a:	9b01      	ldr	r3, [sp, #4]
 800161c:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001620:	b15b      	cbz	r3, 800163a <__smakebuf_r+0x70>
 8001622:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001626:	4630      	mov	r0, r6
 8001628:	f000 f84e 	bl	80016c8 <_isatty_r>
 800162c:	b128      	cbz	r0, 800163a <__smakebuf_r+0x70>
 800162e:	89a3      	ldrh	r3, [r4, #12]
 8001630:	f023 0303 	bic.w	r3, r3, #3
 8001634:	f043 0301 	orr.w	r3, r3, #1
 8001638:	81a3      	strh	r3, [r4, #12]
 800163a:	89a3      	ldrh	r3, [r4, #12]
 800163c:	431d      	orrs	r5, r3
 800163e:	81a5      	strh	r5, [r4, #12]
 8001640:	e7cf      	b.n	80015e2 <__smakebuf_r+0x18>

08001642 <_raise_r>:
 8001642:	291f      	cmp	r1, #31
 8001644:	b538      	push	{r3, r4, r5, lr}
 8001646:	4605      	mov	r5, r0
 8001648:	460c      	mov	r4, r1
 800164a:	d904      	bls.n	8001656 <_raise_r+0x14>
 800164c:	2316      	movs	r3, #22
 800164e:	6003      	str	r3, [r0, #0]
 8001650:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001654:	bd38      	pop	{r3, r4, r5, pc}
 8001656:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8001658:	b112      	cbz	r2, 8001660 <_raise_r+0x1e>
 800165a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800165e:	b94b      	cbnz	r3, 8001674 <_raise_r+0x32>
 8001660:	4628      	mov	r0, r5
 8001662:	f000 f853 	bl	800170c <_getpid_r>
 8001666:	4622      	mov	r2, r4
 8001668:	4601      	mov	r1, r0
 800166a:	4628      	mov	r0, r5
 800166c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001670:	f000 b83a 	b.w	80016e8 <_kill_r>
 8001674:	2b01      	cmp	r3, #1
 8001676:	d00a      	beq.n	800168e <_raise_r+0x4c>
 8001678:	1c59      	adds	r1, r3, #1
 800167a:	d103      	bne.n	8001684 <_raise_r+0x42>
 800167c:	2316      	movs	r3, #22
 800167e:	6003      	str	r3, [r0, #0]
 8001680:	2001      	movs	r0, #1
 8001682:	e7e7      	b.n	8001654 <_raise_r+0x12>
 8001684:	2100      	movs	r1, #0
 8001686:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800168a:	4620      	mov	r0, r4
 800168c:	4798      	blx	r3
 800168e:	2000      	movs	r0, #0
 8001690:	e7e0      	b.n	8001654 <_raise_r+0x12>
	...

08001694 <raise>:
 8001694:	4b02      	ldr	r3, [pc, #8]	@ (80016a0 <raise+0xc>)
 8001696:	4601      	mov	r1, r0
 8001698:	6818      	ldr	r0, [r3, #0]
 800169a:	f7ff bfd2 	b.w	8001642 <_raise_r>
 800169e:	bf00      	nop
 80016a0:	20000054 	.word	0x20000054

080016a4 <_fstat_r>:
 80016a4:	b538      	push	{r3, r4, r5, lr}
 80016a6:	4d07      	ldr	r5, [pc, #28]	@ (80016c4 <_fstat_r+0x20>)
 80016a8:	2300      	movs	r3, #0
 80016aa:	4604      	mov	r4, r0
 80016ac:	4608      	mov	r0, r1
 80016ae:	4611      	mov	r1, r2
 80016b0:	602b      	str	r3, [r5, #0]
 80016b2:	f7fe ff77 	bl	80005a4 <_fstat>
 80016b6:	1c43      	adds	r3, r0, #1
 80016b8:	d102      	bne.n	80016c0 <_fstat_r+0x1c>
 80016ba:	682b      	ldr	r3, [r5, #0]
 80016bc:	b103      	cbz	r3, 80016c0 <_fstat_r+0x1c>
 80016be:	6023      	str	r3, [r4, #0]
 80016c0:	bd38      	pop	{r3, r4, r5, pc}
 80016c2:	bf00      	nop
 80016c4:	20000200 	.word	0x20000200

080016c8 <_isatty_r>:
 80016c8:	b538      	push	{r3, r4, r5, lr}
 80016ca:	4d06      	ldr	r5, [pc, #24]	@ (80016e4 <_isatty_r+0x1c>)
 80016cc:	2300      	movs	r3, #0
 80016ce:	4604      	mov	r4, r0
 80016d0:	4608      	mov	r0, r1
 80016d2:	602b      	str	r3, [r5, #0]
 80016d4:	f7fe ff76 	bl	80005c4 <_isatty>
 80016d8:	1c43      	adds	r3, r0, #1
 80016da:	d102      	bne.n	80016e2 <_isatty_r+0x1a>
 80016dc:	682b      	ldr	r3, [r5, #0]
 80016de:	b103      	cbz	r3, 80016e2 <_isatty_r+0x1a>
 80016e0:	6023      	str	r3, [r4, #0]
 80016e2:	bd38      	pop	{r3, r4, r5, pc}
 80016e4:	20000200 	.word	0x20000200

080016e8 <_kill_r>:
 80016e8:	b538      	push	{r3, r4, r5, lr}
 80016ea:	4d07      	ldr	r5, [pc, #28]	@ (8001708 <_kill_r+0x20>)
 80016ec:	2300      	movs	r3, #0
 80016ee:	4604      	mov	r4, r0
 80016f0:	4608      	mov	r0, r1
 80016f2:	4611      	mov	r1, r2
 80016f4:	602b      	str	r3, [r5, #0]
 80016f6:	f7fe fef5 	bl	80004e4 <_kill>
 80016fa:	1c43      	adds	r3, r0, #1
 80016fc:	d102      	bne.n	8001704 <_kill_r+0x1c>
 80016fe:	682b      	ldr	r3, [r5, #0]
 8001700:	b103      	cbz	r3, 8001704 <_kill_r+0x1c>
 8001702:	6023      	str	r3, [r4, #0]
 8001704:	bd38      	pop	{r3, r4, r5, pc}
 8001706:	bf00      	nop
 8001708:	20000200 	.word	0x20000200

0800170c <_getpid_r>:
 800170c:	f7fe bee2 	b.w	80004d4 <_getpid>

08001710 <_init>:
 8001710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001712:	bf00      	nop
 8001714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001716:	bc08      	pop	{r3}
 8001718:	469e      	mov	lr, r3
 800171a:	4770      	bx	lr

0800171c <_fini>:
 800171c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800171e:	bf00      	nop
 8001720:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001722:	bc08      	pop	{r3}
 8001724:	469e      	mov	lr, r3
 8001726:	4770      	bx	lr
