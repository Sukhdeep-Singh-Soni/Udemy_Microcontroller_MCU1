/*
 * stm32f401re.h
 *
 *  Created on: Nov 24, 2024
 *      Author: deep
 */

#ifndef INC_STM32F401RE_H_
#define INC_STM32F401RE_H_

#include <stdint.h>

#define __vo volatile
/*
 * base address of various memory peripherals in the microcontroller
 * note: reference taken from reference manual flash memory section
 * */
#define FLASH_BASEADDR	0x08000000U /*start address of flash memory*/
#define SRAM_BASEADDR	0x20000000U /*start addr of SRAM - 96KB*/
#define ROM_BASEADDR	0x1FFF0000U /*start addr of system memory*/

/*
 * base address of various bus domains of the microcontroller
 * note: reference taken from uC reference manual
 * */
#define PERI_BASEADDR		0x40000000U /*uC peripheral start addr*/
#define AHB1_BASEADDR		0x40020000U /*ahb1 bus peripheral start addr*/
#define AHB2_BASEADDR		0x50000000U /*ahb2 bus peripheral start addr*/
#define APB1_BASEADDR		PERI_BASEADDR /*apb1 bus peri atart addr*/
#define APB2_BASEADDR		0x40010000U /*apb2 bus peri start addr*/

/*
 * base address of peripherals hanging on AHB1 bus
 * took reference from uC reference manual
 * currently not defining all peripherals only the required peripherals for the project
 * */
#define GPIOA_BASEADDR		(AHB1_BASEADDR + 0x0000U) /*GPIOA peri base addr, AHB1 base addr + gpioA offset*/
#define GPIOB_BASEADDR		(AHB1_BASEADDR + 0x0400U) /*GPIOB peri base addr, AHB1 base addr + gpioB offset*/
#define GPIOC_BASEADDR		(AHB1_BASEADDR + 0x0800U) /*GPIOC peri base addr, AHB1 base addr + gpioC offset*/
#define GPIOD_BASEADDR		(AHB1_BASEADDR + 0x0C00U) /*GPIOD peri base addr, AHB1 base addr + gpioD offset*/
#define GPIOE_BASEADDR		(AHB1_BASEADDR + 0x1000U) /*GPIOE peri base addr, AHB1 base addr + gpioE offset*/
#define GPIOH_BASEADDR		(AHB1_BASEADDR + 0x1C00U) /*GPIOH peri base addr, AHB1 base addr + gpioH offset*/
#define RCC_BASEADDR		(AHB1_BASEADDR + 0x3800U) /*RCC peri base addr, AHB1 base addr + RCC offset*/

/*
 * base address of peripherals hanging on APB1 bus
 * reference taken from uC reference manual
 * */
#define SPI2_BASEADDR		(APB1_BASEADDR + 0x3800U) /*spi2 peri base address, apb1 base addr + spi2 base*/
#define SPI3_BASEADDR		(APB1_BASEADDR + 0x3C00U) /*spi3 peri base address, apb1 base addr + spi3 base*/
#define I2C1_BASEADDR		(APB1_BASEADDR + 0x5400U) /*i2c1 peri base address, apb1 base addr + i2c1 base*/
#define I2C2_BASEADDR		(APB1_BASEADDR + 0x5800U) /*i2c2 peri base address, apb1 base addr + i2c2 base*/
#define I2C3_BASEADDR		(APB1_BASEADDR + 0x5C00U) /*i2c3 peri base address, apb1 base addr + i2c3 base*/
#define USART2_BASEADDR		(APB1_BASEADDR + 0x4400U) /*usart2 peri base address, apb1 base addr + usart2 base*/

/*
 * base addr of peripherals hanging from APB2 bus
 * reference taken from uC reference manual
 * */
#define USART1_BASEADDR		(APB2_BASEADDR + 0x1000U) /*usart1 peri base address, apb2 base addr + usart1 base*/
#define USART6_BASEADDR		(APB2_BASEADDR + 0x1400U) /*usart6 peri base address, apb2 base addr + usart6 base*/
#define SPI1_BASEADDR		(APB2_BASEADDR + 0x3000U) /*spi1 peri base address, apb2 base addr + spi1 base*/
#define SPI4_BASEADDR		(APB2_BASEADDR + 0x3400U) /*spi4 peri base address, apb2 base addr + spi4 base*/
#define SYSCFG_BASEADDR		(APB2_BASEADDR + 0x3800U) /*syscfg peri base address, apb2 base addr + syscfg base*/
#define EXIT_BASEADDR		(APB2_BASEADDR + 0x3C00U) /*exti peri base address, apb2 base addr + exti base*/

/*###################### peripheral register definition structures ##############################
 * - peripheral registers varies based on the MCU used
 * - eg. stm32f4/stm32l4/stm32f0 might have different number of registers of spi/i2c etc
 * - please refer to your uC for the correct peripheral registers
 * */

/*
 * peripheral register definition structure of GPIO
 * */
typedef struct {
	__vo uint32_t MODER; /*GPIO port mode register, address offset=0x00*/
	__vo uint32_t OTYPER; /*GPIO port output type register, address offset=0x04*/
	__vo uint32_t OSPEEDR; /*GPIO port output speed register, address offset=0x08*/
	__vo uint32_t PUPDR; /*GPIO port pull-up/pull-down register, address offset=0x0C*/
	__vo uint32_t IDR; /*GPIO port input data register, address offset=0x10*/
	__vo uint32_t ODR; /*GPIO port output data register, address offset=0x14*/
	__vo uint32_t BSRR; /*GPIO port bit set/reset register, address offset=0x18*/
	__vo uint32_t LCKR; /*GPIO port configuration lock register, address offset=0x1C*/
	__vo uint32_t AFR[2]; /*GPIO port mode register, address offset=0x00*/
}GPIO_RegDef_t;


#endif /* INC_STM32F401RE_H_ */
